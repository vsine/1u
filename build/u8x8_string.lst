ARM GAS  C:\Users\master\AppData\Local\Temp\ccUbBOFc.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"u8x8_string.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.u8x8_GetStringLineCnt,"ax",%progbits
  20              		.align	2
  21              		.global	u8x8_GetStringLineCnt
  22              		.thumb
  23              		.thumb_func
  25              	u8x8_GetStringLineCnt:
  26              	.LFB0:
  27              		.file 1 "u8g2_lib/u8x8_string.c"
   1:u8g2_lib/u8x8_string.c **** /*
   2:u8g2_lib/u8x8_string.c **** 
   3:u8g2_lib/u8x8_string.c ****   u8x8_string.c
   4:u8g2_lib/u8x8_string.c ****   
   5:u8g2_lib/u8x8_string.c ****   string line procedures
   6:u8g2_lib/u8x8_string.c ****   
   7:u8g2_lib/u8x8_string.c ****   Universal 8bit Graphics Library (https://github.com/olikraus/u8g2/)
   8:u8g2_lib/u8x8_string.c **** 
   9:u8g2_lib/u8x8_string.c ****   Copyright (c) 2016, olikraus@gmail.com
  10:u8g2_lib/u8x8_string.c ****   All rights reserved.
  11:u8g2_lib/u8x8_string.c **** 
  12:u8g2_lib/u8x8_string.c ****   Redistribution and use in source and binary forms, with or without modification, 
  13:u8g2_lib/u8x8_string.c ****   are permitted provided that the following conditions are met:
  14:u8g2_lib/u8x8_string.c **** 
  15:u8g2_lib/u8x8_string.c ****   * Redistributions of source code must retain the above copyright notice, this list 
  16:u8g2_lib/u8x8_string.c ****     of conditions and the following disclaimer.
  17:u8g2_lib/u8x8_string.c ****     
  18:u8g2_lib/u8x8_string.c ****   * Redistributions in binary form must reproduce the above copyright notice, this 
  19:u8g2_lib/u8x8_string.c ****     list of conditions and the following disclaimer in the documentation and/or other 
  20:u8g2_lib/u8x8_string.c ****     materials provided with the distribution.
  21:u8g2_lib/u8x8_string.c **** 
  22:u8g2_lib/u8x8_string.c ****   THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND 
  23:u8g2_lib/u8x8_string.c ****   CONTRIBUTORS "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, 
  24:u8g2_lib/u8x8_string.c ****   INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF 
  25:u8g2_lib/u8x8_string.c ****   MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE 
  26:u8g2_lib/u8x8_string.c ****   DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR 
  27:u8g2_lib/u8x8_string.c ****   CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, 
  28:u8g2_lib/u8x8_string.c ****   SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT 
  29:u8g2_lib/u8x8_string.c ****   NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; 
  30:u8g2_lib/u8x8_string.c ****   LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER 
  31:u8g2_lib/u8x8_string.c ****   CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, 
ARM GAS  C:\Users\master\AppData\Local\Temp\ccUbBOFc.s 			page 2


  32:u8g2_lib/u8x8_string.c ****   STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) 
  33:u8g2_lib/u8x8_string.c ****   ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF 
  34:u8g2_lib/u8x8_string.c ****   ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.    
  35:u8g2_lib/u8x8_string.c **** 
  36:u8g2_lib/u8x8_string.c **** */
  37:u8g2_lib/u8x8_string.c **** 
  38:u8g2_lib/u8x8_string.c **** #include "u8x8.h"
  39:u8g2_lib/u8x8_string.c **** 
  40:u8g2_lib/u8x8_string.c **** uint8_t u8x8_GetStringLineCnt(const char *str)
  41:u8g2_lib/u8x8_string.c **** {
  28              		.loc 1 41 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              		@ link register save eliminated.
  33              	.LVL0:
  42:u8g2_lib/u8x8_string.c ****   char e;
  43:u8g2_lib/u8x8_string.c ****   uint8_t line_cnt = 1;
  44:u8g2_lib/u8x8_string.c ****   if ( str == NULL )
  34              		.loc 1 44 0
  35 0000 0346     		mov	r3, r0
  36 0002 40B1     		cbz	r0, .L5
  37 0004 0120     		movs	r0, #1
  38              	.LVL1:
  39              	.L3:
  45:u8g2_lib/u8x8_string.c ****     return 0;
  46:u8g2_lib/u8x8_string.c ****   for(;;)
  47:u8g2_lib/u8x8_string.c ****   {
  48:u8g2_lib/u8x8_string.c ****     e = *str;
  40              		.loc 1 48 0
  41 0006 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
  42              	.LVL2:
  49:u8g2_lib/u8x8_string.c ****     if ( e == '\0' )
  43              		.loc 1 49 0
  44 0008 32B1     		cbz	r2, .L2
  50:u8g2_lib/u8x8_string.c ****       break;
  51:u8g2_lib/u8x8_string.c ****     str++;
  45              		.loc 1 51 0
  46 000a 0133     		adds	r3, r3, #1
  47              	.LVL3:
  52:u8g2_lib/u8x8_string.c ****     if ( e == '\n' )
  48              		.loc 1 52 0
  49 000c 0A2A     		cmp	r2, #10
  50 000e FAD1     		bne	.L3
  53:u8g2_lib/u8x8_string.c ****       line_cnt++;
  51              		.loc 1 53 0
  52 0010 0130     		adds	r0, r0, #1
  53              	.LVL4:
  54 0012 C0B2     		uxtb	r0, r0
  55              	.LVL5:
  56 0014 F7E7     		b	.L3
  57              	.LVL6:
  58              	.L5:
  45:u8g2_lib/u8x8_string.c ****   for(;;)
  59              		.loc 1 45 0
  60 0016 0020     		movs	r0, #0
  61              	.LVL7:
ARM GAS  C:\Users\master\AppData\Local\Temp\ccUbBOFc.s 			page 3


  62              	.L2:
  54:u8g2_lib/u8x8_string.c ****   }
  55:u8g2_lib/u8x8_string.c ****   return line_cnt;
  56:u8g2_lib/u8x8_string.c **** }
  63              		.loc 1 56 0
  64 0018 7047     		bx	lr
  65              		.cfi_endproc
  66              	.LFE0:
  68 001a 00BF     		.section	.text.u8x8_GetStringLineStart,"ax",%progbits
  69              		.align	2
  70              		.global	u8x8_GetStringLineStart
  71              		.thumb
  72              		.thumb_func
  74              	u8x8_GetStringLineStart:
  75              	.LFB1:
  57:u8g2_lib/u8x8_string.c **** 
  58:u8g2_lib/u8x8_string.c **** 
  59:u8g2_lib/u8x8_string.c **** /*
  60:u8g2_lib/u8x8_string.c ****     Assumes strings, separated by '\n' in "str".
  61:u8g2_lib/u8x8_string.c ****     Returns the string at index "line_idx". First strng has line_idx = 0
  62:u8g2_lib/u8x8_string.c ****     Example:
  63:u8g2_lib/u8x8_string.c ****       Returns "xyz" for line_idx = 1 with str = "abc\nxyz"
  64:u8g2_lib/u8x8_string.c ****     Support both UTF8 and normal strings.
  65:u8g2_lib/u8x8_string.c **** */
  66:u8g2_lib/u8x8_string.c **** const char *u8x8_GetStringLineStart(uint8_t line_idx, const char *str )
  67:u8g2_lib/u8x8_string.c **** {
  76              		.loc 1 67 0
  77              		.cfi_startproc
  78              		@ args = 0, pretend = 0, frame = 0
  79              		@ frame_needed = 0, uses_anonymous_args = 0
  80              		@ link register save eliminated.
  81              	.LVL8:
  68:u8g2_lib/u8x8_string.c ****   char e;
  69:u8g2_lib/u8x8_string.c ****   uint8_t line_cnt = 1;
  70:u8g2_lib/u8x8_string.c ****   
  71:u8g2_lib/u8x8_string.c ****   if ( line_idx == 0 )
  82              		.loc 1 71 0
  83 0000 60B1     		cbz	r0, .L11
  67:u8g2_lib/u8x8_string.c ****   char e;
  84              		.loc 1 67 0
  85 0002 10B4     		push	{r4}
  86              	.LCFI0:
  87              		.cfi_def_cfa_offset 4
  88              		.cfi_offset 4, -4
  89 0004 0446     		mov	r4, r0
  90 0006 0122     		movs	r2, #1
  91              	.LVL9:
  92              	.L9:
  72:u8g2_lib/u8x8_string.c ****     return str;
  73:u8g2_lib/u8x8_string.c **** 
  74:u8g2_lib/u8x8_string.c ****   for(;;)
  75:u8g2_lib/u8x8_string.c ****   {
  76:u8g2_lib/u8x8_string.c ****     e = *str;
  93              		.loc 1 76 0
  94 0008 0B78     		ldrb	r3, [r1]	@ zero_extendqisi2
  95              	.LVL10:
  77:u8g2_lib/u8x8_string.c ****     if ( e == '\0' )
ARM GAS  C:\Users\master\AppData\Local\Temp\ccUbBOFc.s 			page 4


  96              		.loc 1 77 0
  97 000a 4BB1     		cbz	r3, .L12
  78:u8g2_lib/u8x8_string.c ****       break;
  79:u8g2_lib/u8x8_string.c ****     str++;
  98              		.loc 1 79 0
  99 000c 0131     		adds	r1, r1, #1
 100              	.LVL11:
  80:u8g2_lib/u8x8_string.c ****     if ( e == '\n' )
 101              		.loc 1 80 0
 102 000e 0A2B     		cmp	r3, #10
 103 0010 FAD1     		bne	.L9
  81:u8g2_lib/u8x8_string.c ****     {
  82:u8g2_lib/u8x8_string.c ****       if ( line_cnt == line_idx )
 104              		.loc 1 82 0
 105 0012 A242     		cmp	r2, r4
 106 0014 06D0     		beq	.L13
  83:u8g2_lib/u8x8_string.c **** 	return str;
  84:u8g2_lib/u8x8_string.c ****       line_cnt++;
 107              		.loc 1 84 0
 108 0016 0132     		adds	r2, r2, #1
 109              	.LVL12:
 110 0018 D2B2     		uxtb	r2, r2
 111              	.LVL13:
 112 001a F5E7     		b	.L9
 113              	.LVL14:
 114              	.L11:
 115              	.LCFI1:
 116              		.cfi_def_cfa_offset 0
 117              		.cfi_restore 4
  72:u8g2_lib/u8x8_string.c **** 
 118              		.loc 1 72 0
 119 001c 0846     		mov	r0, r1
 120              	.LVL15:
  85:u8g2_lib/u8x8_string.c ****     }
  86:u8g2_lib/u8x8_string.c ****   }
  87:u8g2_lib/u8x8_string.c ****   return NULL;	/* line not found */
  88:u8g2_lib/u8x8_string.c **** }
 121              		.loc 1 88 0
 122 001e 7047     		bx	lr
 123              	.LVL16:
 124              	.L12:
 125              	.LCFI2:
 126              		.cfi_def_cfa_offset 4
 127              		.cfi_offset 4, -4
  87:u8g2_lib/u8x8_string.c **** }
 128              		.loc 1 87 0
 129 0020 0020     		movs	r0, #0
 130              	.LVL17:
 131 0022 00E0     		b	.L8
 132              	.LVL18:
 133              	.L13:
  83:u8g2_lib/u8x8_string.c ****       line_cnt++;
 134              		.loc 1 83 0
 135 0024 0846     		mov	r0, r1
 136              	.LVL19:
 137              	.L8:
 138              		.loc 1 88 0
ARM GAS  C:\Users\master\AppData\Local\Temp\ccUbBOFc.s 			page 5


 139 0026 10BC     		pop	{r4}
 140              	.LCFI3:
 141              		.cfi_restore 4
 142              		.cfi_def_cfa_offset 0
 143 0028 7047     		bx	lr
 144              		.cfi_endproc
 145              	.LFE1:
 147 002a 00BF     		.section	.text.u8x8_CopyStringLine,"ax",%progbits
 148              		.align	2
 149              		.global	u8x8_CopyStringLine
 150              		.thumb
 151              		.thumb_func
 153              	u8x8_CopyStringLine:
 154              	.LFB2:
  89:u8g2_lib/u8x8_string.c **** 
  90:u8g2_lib/u8x8_string.c **** /* copy until first '\n' or '\0' in str */
  91:u8g2_lib/u8x8_string.c **** /* Important: There is no string overflow check, ensure */
  92:u8g2_lib/u8x8_string.c **** /* that the destination buffer is large enough */
  93:u8g2_lib/u8x8_string.c **** void u8x8_CopyStringLine(char *dest, uint8_t line_idx, const char *str)
  94:u8g2_lib/u8x8_string.c **** {
 155              		.loc 1 94 0
 156              		.cfi_startproc
 157              		@ args = 0, pretend = 0, frame = 0
 158              		@ frame_needed = 0, uses_anonymous_args = 0
 159              	.LVL20:
  95:u8g2_lib/u8x8_string.c ****   if ( dest == NULL )
 160              		.loc 1 95 0
 161 0000 98B1     		cbz	r0, .L20
  94:u8g2_lib/u8x8_string.c ****   if ( dest == NULL )
 162              		.loc 1 94 0
 163 0002 10B5     		push	{r4, lr}
 164              	.LCFI4:
 165              		.cfi_def_cfa_offset 8
 166              		.cfi_offset 4, -8
 167              		.cfi_offset 14, -4
 168 0004 0B46     		mov	r3, r1
 169 0006 0446     		mov	r4, r0
  96:u8g2_lib/u8x8_string.c ****     return;
  97:u8g2_lib/u8x8_string.c ****   str = u8x8_GetStringLineStart( line_idx, str );
 170              		.loc 1 97 0
 171 0008 1146     		mov	r1, r2
 172              	.LVL21:
 173 000a 1846     		mov	r0, r3
 174              	.LVL22:
 175 000c FFF7FEFF 		bl	u8x8_GetStringLineStart
 176              	.LVL23:
  98:u8g2_lib/u8x8_string.c ****   if ( str != NULL )
 177              		.loc 1 98 0
 178 0010 0246     		mov	r2, r0
 179 0012 38B1     		cbz	r0, .L17
 180              	.LVL24:
 181              	.L18:
  99:u8g2_lib/u8x8_string.c ****   {
 100:u8g2_lib/u8x8_string.c ****     for(;;)
 101:u8g2_lib/u8x8_string.c ****     {
 102:u8g2_lib/u8x8_string.c ****       if ( *str == '\n' || *str == '\0' )
 182              		.loc 1 102 0
ARM GAS  C:\Users\master\AppData\Local\Temp\ccUbBOFc.s 			page 6


 183 0014 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 184 0016 0A2B     		cmp	r3, #10
 185 0018 04D0     		beq	.L17
 186              		.loc 1 102 0 is_stmt 0 discriminator 1
 187 001a 1BB1     		cbz	r3, .L17
 103:u8g2_lib/u8x8_string.c **** 	break;
 104:u8g2_lib/u8x8_string.c ****       *dest = *str;
 188              		.loc 1 104 0 is_stmt 1
 189 001c 04F8013B 		strb	r3, [r4], #1
 190              	.LVL25:
 105:u8g2_lib/u8x8_string.c ****       dest++;
 106:u8g2_lib/u8x8_string.c ****       str++;
 191              		.loc 1 106 0
 192 0020 0132     		adds	r2, r2, #1
 193              	.LVL26:
 107:u8g2_lib/u8x8_string.c ****     }
 194              		.loc 1 107 0
 195 0022 F7E7     		b	.L18
 196              	.L17:
 108:u8g2_lib/u8x8_string.c ****   }
 109:u8g2_lib/u8x8_string.c ****   *dest = '\0';
 197              		.loc 1 109 0
 198 0024 0023     		movs	r3, #0
 199 0026 2370     		strb	r3, [r4]
 200 0028 10BD     		pop	{r4, pc}
 201              	.LVL27:
 202              	.L20:
 203              	.LCFI5:
 204              		.cfi_def_cfa_offset 0
 205              		.cfi_restore 4
 206              		.cfi_restore 14
 207 002a 7047     		bx	lr
 208              		.cfi_endproc
 209              	.LFE2:
 211              		.section	.text.u8x8_DrawUTF8Line,"ax",%progbits
 212              		.align	2
 213              		.global	u8x8_DrawUTF8Line
 214              		.thumb
 215              		.thumb_func
 217              	u8x8_DrawUTF8Line:
 218              	.LFB3:
 110:u8g2_lib/u8x8_string.c **** }
 111:u8g2_lib/u8x8_string.c **** 
 112:u8g2_lib/u8x8_string.c **** /*
 113:u8g2_lib/u8x8_string.c ****   Draw a string
 114:u8g2_lib/u8x8_string.c ****   Extend the string to size "w"
 115:u8g2_lib/u8x8_string.c ****   Center the string within "w"
 116:u8g2_lib/u8x8_string.c ****   return the size of the string
 117:u8g2_lib/u8x8_string.c **** 
 118:u8g2_lib/u8x8_string.c **** */
 119:u8g2_lib/u8x8_string.c **** uint8_t u8x8_DrawUTF8Line(u8x8_t *u8x8, uint8_t x, uint8_t y, uint8_t w, const char *s)
 120:u8g2_lib/u8x8_string.c **** {
 219              		.loc 1 120 0
 220              		.cfi_startproc
 221              		@ args = 4, pretend = 0, frame = 0
 222              		@ frame_needed = 0, uses_anonymous_args = 0
 223              	.LVL28:
ARM GAS  C:\Users\master\AppData\Local\Temp\ccUbBOFc.s 			page 7


 224 0000 2DE9F843 		push	{r3, r4, r5, r6, r7, r8, r9, lr}
 225              	.LCFI6:
 226              		.cfi_def_cfa_offset 32
 227              		.cfi_offset 3, -32
 228              		.cfi_offset 4, -28
 229              		.cfi_offset 5, -24
 230              		.cfi_offset 6, -20
 231              		.cfi_offset 7, -16
 232              		.cfi_offset 8, -12
 233              		.cfi_offset 9, -8
 234              		.cfi_offset 14, -4
 235 0004 0546     		mov	r5, r0
 236 0006 0F46     		mov	r7, r1
 237 0008 1646     		mov	r6, r2
 238 000a 9846     		mov	r8, r3
 239              	.LVL29:
 121:u8g2_lib/u8x8_string.c ****   uint8_t d, lw;
 122:u8g2_lib/u8x8_string.c ****   uint8_t cx, dx;
 123:u8g2_lib/u8x8_string.c ****     
 124:u8g2_lib/u8x8_string.c ****   d = 0;
 125:u8g2_lib/u8x8_string.c ****   
 126:u8g2_lib/u8x8_string.c ****   lw = u8x8_GetUTF8Len(u8x8, s);
 240              		.loc 1 126 0
 241 000c 0899     		ldr	r1, [sp, #32]
 242              	.LVL30:
 243 000e FFF7FEFF 		bl	u8x8_GetUTF8Len
 244              	.LVL31:
 127:u8g2_lib/u8x8_string.c ****   if ( lw < w )
 245              		.loc 1 127 0
 246 0012 4045     		cmp	r0, r8
 247 0014 04D2     		bcs	.L27
 248              	.LVL32:
 128:u8g2_lib/u8x8_string.c ****   {
 129:u8g2_lib/u8x8_string.c ****     d = w;
 130:u8g2_lib/u8x8_string.c ****     d -=lw;
 249              		.loc 1 130 0
 250 0016 C0EB0809 		rsb	r9, r0, r8
 251              	.LVL33:
 131:u8g2_lib/u8x8_string.c ****     d /= 2;
 252              		.loc 1 131 0
 253 001a C9F34609 		ubfx	r9, r9, #1, #7
 254              	.LVL34:
 255 001e 01E0     		b	.L22
 256              	.LVL35:
 257              	.L27:
 124:u8g2_lib/u8x8_string.c ****   
 258              		.loc 1 124 0
 259 0020 4FF00009 		mov	r9, #0
 260              	.LVL36:
 261              	.L22:
 132:u8g2_lib/u8x8_string.c ****   }
 133:u8g2_lib/u8x8_string.c ****     
 134:u8g2_lib/u8x8_string.c ****   cx = x;
 135:u8g2_lib/u8x8_string.c ****   dx = cx + d;
 262              		.loc 1 135 0
 263 0024 B944     		add	r9, r9, r7
 264              	.LVL37:
ARM GAS  C:\Users\master\AppData\Local\Temp\ccUbBOFc.s 			page 8


 265 0026 5FFA89F9 		uxtb	r9, r9
 266              	.LVL38:
 134:u8g2_lib/u8x8_string.c ****   dx = cx + d;
 267              		.loc 1 134 0
 268 002a 3C46     		mov	r4, r7
 136:u8g2_lib/u8x8_string.c ****   while( cx < dx )
 269              		.loc 1 136 0
 270 002c 07E0     		b	.L23
 271              	.LVL39:
 272              	.L24:
 137:u8g2_lib/u8x8_string.c ****   {
 138:u8g2_lib/u8x8_string.c ****     u8x8_DrawUTF8(u8x8, cx, y, " ");
 273              		.loc 1 138 0
 274 002e 124B     		ldr	r3, .L29
 275 0030 3246     		mov	r2, r6
 276 0032 2146     		mov	r1, r4
 277 0034 2846     		mov	r0, r5
 278 0036 FFF7FEFF 		bl	u8x8_DrawUTF8
 279              	.LVL40:
 139:u8g2_lib/u8x8_string.c ****     cx++;
 280              		.loc 1 139 0
 281 003a 0134     		adds	r4, r4, #1
 282              	.LVL41:
 283 003c E4B2     		uxtb	r4, r4
 284              	.LVL42:
 285              	.L23:
 136:u8g2_lib/u8x8_string.c ****   while( cx < dx )
 286              		.loc 1 136 0
 287 003e 4C45     		cmp	r4, r9
 288 0040 F5D3     		bcc	.L24
 140:u8g2_lib/u8x8_string.c ****   }
 141:u8g2_lib/u8x8_string.c ****   cx += u8x8_DrawUTF8(u8x8, cx, y, s);
 289              		.loc 1 141 0
 290 0042 089B     		ldr	r3, [sp, #32]
 291 0044 3246     		mov	r2, r6
 292 0046 2146     		mov	r1, r4
 293 0048 2846     		mov	r0, r5
 294 004a FFF7FEFF 		bl	u8x8_DrawUTF8
 295              	.LVL43:
 296 004e 2044     		add	r0, r0, r4
 297 0050 C4B2     		uxtb	r4, r0
 298              	.LVL44:
 142:u8g2_lib/u8x8_string.c ****   dx = x + w;
 299              		.loc 1 142 0
 300 0052 B844     		add	r8, r8, r7
 301 0054 5FFA88F8 		uxtb	r8, r8
 302              	.LVL45:
 143:u8g2_lib/u8x8_string.c ****   while( cx < dx )
 303              		.loc 1 143 0
 304 0058 07E0     		b	.L25
 305              	.L26:
 144:u8g2_lib/u8x8_string.c ****   {
 145:u8g2_lib/u8x8_string.c ****     u8x8_DrawUTF8(u8x8, cx, y, " ");
 306              		.loc 1 145 0
 307 005a 074B     		ldr	r3, .L29
 308 005c 3246     		mov	r2, r6
 309 005e 2146     		mov	r1, r4
ARM GAS  C:\Users\master\AppData\Local\Temp\ccUbBOFc.s 			page 9


 310 0060 2846     		mov	r0, r5
 311 0062 FFF7FEFF 		bl	u8x8_DrawUTF8
 312              	.LVL46:
 146:u8g2_lib/u8x8_string.c ****     cx++;
 313              		.loc 1 146 0
 314 0066 0134     		adds	r4, r4, #1
 315              	.LVL47:
 316 0068 E4B2     		uxtb	r4, r4
 317              	.LVL48:
 318              	.L25:
 143:u8g2_lib/u8x8_string.c ****   while( cx < dx )
 319              		.loc 1 143 0
 320 006a 4445     		cmp	r4, r8
 321 006c F5D3     		bcc	.L26
 147:u8g2_lib/u8x8_string.c ****   }
 148:u8g2_lib/u8x8_string.c ****   cx -= x;
 322              		.loc 1 148 0
 323 006e E01B     		subs	r0, r4, r7
 324              	.LVL49:
 149:u8g2_lib/u8x8_string.c ****   return cx;
 150:u8g2_lib/u8x8_string.c **** }
 325              		.loc 1 150 0
 326 0070 C0B2     		uxtb	r0, r0
 327 0072 BDE8F883 		pop	{r3, r4, r5, r6, r7, r8, r9, pc}
 328              	.LVL50:
 329              	.L30:
 330 0076 00BF     		.align	2
 331              	.L29:
 332 0078 00000000 		.word	.LC0
 333              		.cfi_endproc
 334              	.LFE3:
 336              		.section	.text.u8x8_DrawUTF8Lines,"ax",%progbits
 337              		.align	2
 338              		.global	u8x8_DrawUTF8Lines
 339              		.thumb
 340              		.thumb_func
 342              	u8x8_DrawUTF8Lines:
 343              	.LFB4:
 151:u8g2_lib/u8x8_string.c **** 
 152:u8g2_lib/u8x8_string.c **** /*
 153:u8g2_lib/u8x8_string.c ****   draw several lines at position x,y.
 154:u8g2_lib/u8x8_string.c ****   lines are stored in s and must be separated with '\n'.
 155:u8g2_lib/u8x8_string.c ****   lines can be centered with respect to "w" 
 156:u8g2_lib/u8x8_string.c ****   if s == NULL nothing is drawn and 0 is returned
 157:u8g2_lib/u8x8_string.c ****   returns the number of lines in s
 158:u8g2_lib/u8x8_string.c **** */
 159:u8g2_lib/u8x8_string.c **** uint8_t u8x8_DrawUTF8Lines(u8x8_t *u8x8, uint8_t x, uint8_t y, uint8_t w, const char *s)
 160:u8g2_lib/u8x8_string.c **** {
 344              		.loc 1 160 0
 345              		.cfi_startproc
 346              		@ args = 4, pretend = 0, frame = 0
 347              		@ frame_needed = 0, uses_anonymous_args = 0
 348              	.LVL51:
 349 0000 2DE9F047 		push	{r4, r5, r6, r7, r8, r9, r10, lr}
 350              	.LCFI7:
 351              		.cfi_def_cfa_offset 32
 352              		.cfi_offset 4, -32
ARM GAS  C:\Users\master\AppData\Local\Temp\ccUbBOFc.s 			page 10


 353              		.cfi_offset 5, -28
 354              		.cfi_offset 6, -24
 355              		.cfi_offset 7, -20
 356              		.cfi_offset 8, -16
 357              		.cfi_offset 9, -12
 358              		.cfi_offset 10, -8
 359              		.cfi_offset 14, -4
 360 0004 82B0     		sub	sp, sp, #8
 361              	.LCFI8:
 362              		.cfi_def_cfa_offset 40
 363 0006 8246     		mov	r10, r0
 364 0008 8946     		mov	r9, r1
 365 000a 1546     		mov	r5, r2
 366 000c 9846     		mov	r8, r3
 367 000e 0A9E     		ldr	r6, [sp, #40]
 161:u8g2_lib/u8x8_string.c ****   uint8_t i;
 162:u8g2_lib/u8x8_string.c ****   uint8_t cnt;
 163:u8g2_lib/u8x8_string.c ****   cnt = u8x8_GetStringLineCnt(s);
 368              		.loc 1 163 0
 369 0010 3046     		mov	r0, r6
 370              	.LVL52:
 371 0012 FFF7FEFF 		bl	u8x8_GetStringLineCnt
 372              	.LVL53:
 373 0016 0746     		mov	r7, r0
 374              	.LVL54:
 164:u8g2_lib/u8x8_string.c ****   for( i = 0; i < cnt; i++ )
 375              		.loc 1 164 0
 376 0018 0024     		movs	r4, #0
 377 001a 0EE0     		b	.L32
 378              	.LVL55:
 379              	.L33:
 165:u8g2_lib/u8x8_string.c ****   {
 166:u8g2_lib/u8x8_string.c ****     u8x8_DrawUTF8Line(u8x8, x, y, w, u8x8_GetStringLineStart(i, s));
 380              		.loc 1 166 0 discriminator 3
 381 001c 3146     		mov	r1, r6
 382 001e 2046     		mov	r0, r4
 383 0020 FFF7FEFF 		bl	u8x8_GetStringLineStart
 384              	.LVL56:
 385 0024 0090     		str	r0, [sp]
 386 0026 4346     		mov	r3, r8
 387 0028 2A46     		mov	r2, r5
 388 002a 4946     		mov	r1, r9
 389 002c 5046     		mov	r0, r10
 390 002e FFF7FEFF 		bl	u8x8_DrawUTF8Line
 391              	.LVL57:
 167:u8g2_lib/u8x8_string.c ****     y++;
 392              		.loc 1 167 0 discriminator 3
 393 0032 0135     		adds	r5, r5, #1
 394              	.LVL58:
 395 0034 EDB2     		uxtb	r5, r5
 396              	.LVL59:
 164:u8g2_lib/u8x8_string.c ****   for( i = 0; i < cnt; i++ )
 397              		.loc 1 164 0 discriminator 3
 398 0036 0134     		adds	r4, r4, #1
 399              	.LVL60:
 400 0038 E4B2     		uxtb	r4, r4
 401              	.LVL61:
ARM GAS  C:\Users\master\AppData\Local\Temp\ccUbBOFc.s 			page 11


 402              	.L32:
 164:u8g2_lib/u8x8_string.c ****   for( i = 0; i < cnt; i++ )
 403              		.loc 1 164 0 is_stmt 0 discriminator 1
 404 003a BC42     		cmp	r4, r7
 405 003c EED3     		bcc	.L33
 168:u8g2_lib/u8x8_string.c ****   }
 169:u8g2_lib/u8x8_string.c ****   return cnt;
 170:u8g2_lib/u8x8_string.c **** }
 406              		.loc 1 170 0 is_stmt 1
 407 003e 3846     		mov	r0, r7
 408 0040 02B0     		add	sp, sp, #8
 409              	.LCFI9:
 410              		.cfi_def_cfa_offset 32
 411              		@ sp needed
 412 0042 BDE8F087 		pop	{r4, r5, r6, r7, r8, r9, r10, pc}
 413              		.cfi_endproc
 414              	.LFE4:
 416 0046 00BF     		.section	.rodata.str1.4,"aMS",%progbits,1
 417              		.align	2
 418              	.LC0:
 419 0000 2000     		.ascii	" \000"
 420              		.text
 421              	.Letext0:
 422              		.file 2 "c:\\program files (x86)\\gnu tools arm embedded\\5.4 2016q3\\arm-none-eabi\\include\\mach
 423              		.file 3 "c:\\program files (x86)\\gnu tools arm embedded\\5.4 2016q3\\arm-none-eabi\\include\\sys\
 424              		.file 4 "u8g2_lib/u8x8.h"
ARM GAS  C:\Users\master\AppData\Local\Temp\ccUbBOFc.s 			page 12


DEFINED SYMBOLS
                            *ABS*:00000000 u8x8_string.c
C:\Users\master\AppData\Local\Temp\ccUbBOFc.s:20     .text.u8x8_GetStringLineCnt:00000000 $t
C:\Users\master\AppData\Local\Temp\ccUbBOFc.s:25     .text.u8x8_GetStringLineCnt:00000000 u8x8_GetStringLineCnt
C:\Users\master\AppData\Local\Temp\ccUbBOFc.s:69     .text.u8x8_GetStringLineStart:00000000 $t
C:\Users\master\AppData\Local\Temp\ccUbBOFc.s:74     .text.u8x8_GetStringLineStart:00000000 u8x8_GetStringLineStart
C:\Users\master\AppData\Local\Temp\ccUbBOFc.s:148    .text.u8x8_CopyStringLine:00000000 $t
C:\Users\master\AppData\Local\Temp\ccUbBOFc.s:153    .text.u8x8_CopyStringLine:00000000 u8x8_CopyStringLine
C:\Users\master\AppData\Local\Temp\ccUbBOFc.s:212    .text.u8x8_DrawUTF8Line:00000000 $t
C:\Users\master\AppData\Local\Temp\ccUbBOFc.s:217    .text.u8x8_DrawUTF8Line:00000000 u8x8_DrawUTF8Line
C:\Users\master\AppData\Local\Temp\ccUbBOFc.s:332    .text.u8x8_DrawUTF8Line:00000078 $d
C:\Users\master\AppData\Local\Temp\ccUbBOFc.s:337    .text.u8x8_DrawUTF8Lines:00000000 $t
C:\Users\master\AppData\Local\Temp\ccUbBOFc.s:342    .text.u8x8_DrawUTF8Lines:00000000 u8x8_DrawUTF8Lines
C:\Users\master\AppData\Local\Temp\ccUbBOFc.s:417    .rodata.str1.4:00000000 $d
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
u8x8_GetUTF8Len
u8x8_DrawUTF8
