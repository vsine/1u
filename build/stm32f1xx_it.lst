ARM GAS  C:\Users\master\AppData\Local\Temp\cc4FNLn8.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"stm32f1xx_it.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.NMI_Handler,"ax",%progbits
  20              		.align	2
  21              		.global	NMI_Handler
  22              		.thumb
  23              		.thumb_func
  25              	NMI_Handler:
  26              	.LFB65:
  27              		.file 1 "Core/Src/stm32f1xx_it.c"
   1:Core/Src/stm32f1xx_it.c **** /* USER CODE BEGIN Header */
   2:Core/Src/stm32f1xx_it.c **** /**
   3:Core/Src/stm32f1xx_it.c ****   ******************************************************************************
   4:Core/Src/stm32f1xx_it.c ****   * @file    stm32f1xx_it.c
   5:Core/Src/stm32f1xx_it.c ****   * @brief   Interrupt Service Routines.
   6:Core/Src/stm32f1xx_it.c ****   ******************************************************************************
   7:Core/Src/stm32f1xx_it.c ****   * @attention
   8:Core/Src/stm32f1xx_it.c ****   *
   9:Core/Src/stm32f1xx_it.c ****   * <h2><center>&copy; Copyright (c) 2021 STMicroelectronics.
  10:Core/Src/stm32f1xx_it.c ****   * All rights reserved.</center></h2>
  11:Core/Src/stm32f1xx_it.c ****   *
  12:Core/Src/stm32f1xx_it.c ****   * This software component is licensed by ST under BSD 3-Clause license,
  13:Core/Src/stm32f1xx_it.c ****   * the "License"; You may not use this file except in compliance with the
  14:Core/Src/stm32f1xx_it.c ****   * License. You may obtain a copy of the License at:
  15:Core/Src/stm32f1xx_it.c ****   *                        opensource.org/licenses/BSD-3-Clause
  16:Core/Src/stm32f1xx_it.c ****   *
  17:Core/Src/stm32f1xx_it.c ****   ******************************************************************************
  18:Core/Src/stm32f1xx_it.c ****   */
  19:Core/Src/stm32f1xx_it.c **** /* USER CODE END Header */
  20:Core/Src/stm32f1xx_it.c **** 
  21:Core/Src/stm32f1xx_it.c **** /* Includes ------------------------------------------------------------------*/
  22:Core/Src/stm32f1xx_it.c **** #include "main.h"
  23:Core/Src/stm32f1xx_it.c **** #include "stm32f1xx_it.h"
  24:Core/Src/stm32f1xx_it.c **** /* Private includes ----------------------------------------------------------*/
  25:Core/Src/stm32f1xx_it.c **** /* USER CODE BEGIN Includes */
  26:Core/Src/stm32f1xx_it.c **** /* USER CODE END Includes */
  27:Core/Src/stm32f1xx_it.c **** 
  28:Core/Src/stm32f1xx_it.c **** /* Private typedef -----------------------------------------------------------*/
  29:Core/Src/stm32f1xx_it.c **** /* USER CODE BEGIN TD */
  30:Core/Src/stm32f1xx_it.c **** 
  31:Core/Src/stm32f1xx_it.c **** /* USER CODE END TD */
ARM GAS  C:\Users\master\AppData\Local\Temp\cc4FNLn8.s 			page 2


  32:Core/Src/stm32f1xx_it.c **** 
  33:Core/Src/stm32f1xx_it.c **** /* Private define ------------------------------------------------------------*/
  34:Core/Src/stm32f1xx_it.c **** /* USER CODE BEGIN PD */
  35:Core/Src/stm32f1xx_it.c **** 
  36:Core/Src/stm32f1xx_it.c **** /* USER CODE END PD */
  37:Core/Src/stm32f1xx_it.c **** 
  38:Core/Src/stm32f1xx_it.c **** /* Private macro -------------------------------------------------------------*/
  39:Core/Src/stm32f1xx_it.c **** /* USER CODE BEGIN PM */
  40:Core/Src/stm32f1xx_it.c **** 
  41:Core/Src/stm32f1xx_it.c **** /* USER CODE END PM */
  42:Core/Src/stm32f1xx_it.c **** 
  43:Core/Src/stm32f1xx_it.c **** /* Private variables ---------------------------------------------------------*/
  44:Core/Src/stm32f1xx_it.c **** /* USER CODE BEGIN PV */
  45:Core/Src/stm32f1xx_it.c **** 
  46:Core/Src/stm32f1xx_it.c **** /* USER CODE END PV */
  47:Core/Src/stm32f1xx_it.c **** 
  48:Core/Src/stm32f1xx_it.c **** /* Private function prototypes -----------------------------------------------*/
  49:Core/Src/stm32f1xx_it.c **** /* USER CODE BEGIN PFP */
  50:Core/Src/stm32f1xx_it.c **** 
  51:Core/Src/stm32f1xx_it.c **** /* USER CODE END PFP */
  52:Core/Src/stm32f1xx_it.c **** 
  53:Core/Src/stm32f1xx_it.c **** /* Private user code ---------------------------------------------------------*/
  54:Core/Src/stm32f1xx_it.c **** /* USER CODE BEGIN 0 */
  55:Core/Src/stm32f1xx_it.c **** 
  56:Core/Src/stm32f1xx_it.c **** /* USER CODE END 0 */
  57:Core/Src/stm32f1xx_it.c **** 
  58:Core/Src/stm32f1xx_it.c **** /* External variables --------------------------------------------------------*/
  59:Core/Src/stm32f1xx_it.c **** extern I2C_HandleTypeDef hi2c1;
  60:Core/Src/stm32f1xx_it.c **** extern TIM_HandleTypeDef htim2;
  61:Core/Src/stm32f1xx_it.c **** /* USER CODE BEGIN EV */
  62:Core/Src/stm32f1xx_it.c **** 
  63:Core/Src/stm32f1xx_it.c **** /* USER CODE END EV */
  64:Core/Src/stm32f1xx_it.c **** 
  65:Core/Src/stm32f1xx_it.c **** /******************************************************************************/
  66:Core/Src/stm32f1xx_it.c **** /*           Cortex-M3 Processor Interruption and Exception Handlers          */
  67:Core/Src/stm32f1xx_it.c **** /******************************************************************************/
  68:Core/Src/stm32f1xx_it.c **** /**
  69:Core/Src/stm32f1xx_it.c ****   * @brief This function handles Non maskable interrupt.
  70:Core/Src/stm32f1xx_it.c ****   */
  71:Core/Src/stm32f1xx_it.c **** void NMI_Handler(void)
  72:Core/Src/stm32f1xx_it.c **** {
  28              		.loc 1 72 0
  29              		.cfi_startproc
  30              		@ Volatile: function does not return.
  31              		@ args = 0, pretend = 0, frame = 0
  32              		@ frame_needed = 0, uses_anonymous_args = 0
  33              		@ link register save eliminated.
  34              	.L2:
  35 0000 FEE7     		b	.L2
  36              		.cfi_endproc
  37              	.LFE65:
  39 0002 00BF     		.section	.text.HardFault_Handler,"ax",%progbits
  40              		.align	2
  41              		.global	HardFault_Handler
  42              		.thumb
  43              		.thumb_func
  45              	HardFault_Handler:
ARM GAS  C:\Users\master\AppData\Local\Temp\cc4FNLn8.s 			page 3


  46              	.LFB66:
  73:Core/Src/stm32f1xx_it.c ****   /* USER CODE BEGIN NonMaskableInt_IRQn 0 */
  74:Core/Src/stm32f1xx_it.c **** 
  75:Core/Src/stm32f1xx_it.c ****   /* USER CODE END NonMaskableInt_IRQn 0 */
  76:Core/Src/stm32f1xx_it.c ****   /* USER CODE BEGIN NonMaskableInt_IRQn 1 */
  77:Core/Src/stm32f1xx_it.c ****   while (1)
  78:Core/Src/stm32f1xx_it.c ****   {
  79:Core/Src/stm32f1xx_it.c ****   }
  80:Core/Src/stm32f1xx_it.c ****   /* USER CODE END NonMaskableInt_IRQn 1 */
  81:Core/Src/stm32f1xx_it.c **** }
  82:Core/Src/stm32f1xx_it.c **** 
  83:Core/Src/stm32f1xx_it.c **** /**
  84:Core/Src/stm32f1xx_it.c ****   * @brief This function handles Hard fault interrupt.
  85:Core/Src/stm32f1xx_it.c ****   */
  86:Core/Src/stm32f1xx_it.c **** void HardFault_Handler(void)
  87:Core/Src/stm32f1xx_it.c **** {
  47              		.loc 1 87 0
  48              		.cfi_startproc
  49              		@ Volatile: function does not return.
  50              		@ args = 0, pretend = 0, frame = 0
  51              		@ frame_needed = 0, uses_anonymous_args = 0
  52              		@ link register save eliminated.
  53              	.L4:
  54 0000 FEE7     		b	.L4
  55              		.cfi_endproc
  56              	.LFE66:
  58 0002 00BF     		.section	.text.MemManage_Handler,"ax",%progbits
  59              		.align	2
  60              		.global	MemManage_Handler
  61              		.thumb
  62              		.thumb_func
  64              	MemManage_Handler:
  65              	.LFB67:
  88:Core/Src/stm32f1xx_it.c ****   /* USER CODE BEGIN HardFault_IRQn 0 */
  89:Core/Src/stm32f1xx_it.c **** 
  90:Core/Src/stm32f1xx_it.c ****   /* USER CODE END HardFault_IRQn 0 */
  91:Core/Src/stm32f1xx_it.c ****   while (1)
  92:Core/Src/stm32f1xx_it.c ****   {
  93:Core/Src/stm32f1xx_it.c ****     /* USER CODE BEGIN W1_HardFault_IRQn 0 */
  94:Core/Src/stm32f1xx_it.c ****     /* USER CODE END W1_HardFault_IRQn 0 */
  95:Core/Src/stm32f1xx_it.c ****   }
  96:Core/Src/stm32f1xx_it.c **** }
  97:Core/Src/stm32f1xx_it.c **** 
  98:Core/Src/stm32f1xx_it.c **** /**
  99:Core/Src/stm32f1xx_it.c ****   * @brief This function handles Memory management fault.
 100:Core/Src/stm32f1xx_it.c ****   */
 101:Core/Src/stm32f1xx_it.c **** void MemManage_Handler(void)
 102:Core/Src/stm32f1xx_it.c **** {
  66              		.loc 1 102 0
  67              		.cfi_startproc
  68              		@ Volatile: function does not return.
  69              		@ args = 0, pretend = 0, frame = 0
  70              		@ frame_needed = 0, uses_anonymous_args = 0
  71              		@ link register save eliminated.
  72              	.L6:
  73 0000 FEE7     		b	.L6
  74              		.cfi_endproc
ARM GAS  C:\Users\master\AppData\Local\Temp\cc4FNLn8.s 			page 4


  75              	.LFE67:
  77 0002 00BF     		.section	.text.BusFault_Handler,"ax",%progbits
  78              		.align	2
  79              		.global	BusFault_Handler
  80              		.thumb
  81              		.thumb_func
  83              	BusFault_Handler:
  84              	.LFB68:
 103:Core/Src/stm32f1xx_it.c ****   /* USER CODE BEGIN MemoryManagement_IRQn 0 */
 104:Core/Src/stm32f1xx_it.c **** 
 105:Core/Src/stm32f1xx_it.c ****   /* USER CODE END MemoryManagement_IRQn 0 */
 106:Core/Src/stm32f1xx_it.c ****   while (1)
 107:Core/Src/stm32f1xx_it.c ****   {
 108:Core/Src/stm32f1xx_it.c ****     /* USER CODE BEGIN W1_MemoryManagement_IRQn 0 */
 109:Core/Src/stm32f1xx_it.c ****     /* USER CODE END W1_MemoryManagement_IRQn 0 */
 110:Core/Src/stm32f1xx_it.c ****   }
 111:Core/Src/stm32f1xx_it.c **** }
 112:Core/Src/stm32f1xx_it.c **** 
 113:Core/Src/stm32f1xx_it.c **** /**
 114:Core/Src/stm32f1xx_it.c ****   * @brief This function handles Prefetch fault, memory access fault.
 115:Core/Src/stm32f1xx_it.c ****   */
 116:Core/Src/stm32f1xx_it.c **** void BusFault_Handler(void)
 117:Core/Src/stm32f1xx_it.c **** {
  85              		.loc 1 117 0
  86              		.cfi_startproc
  87              		@ Volatile: function does not return.
  88              		@ args = 0, pretend = 0, frame = 0
  89              		@ frame_needed = 0, uses_anonymous_args = 0
  90              		@ link register save eliminated.
  91              	.L8:
  92 0000 FEE7     		b	.L8
  93              		.cfi_endproc
  94              	.LFE68:
  96 0002 00BF     		.section	.text.UsageFault_Handler,"ax",%progbits
  97              		.align	2
  98              		.global	UsageFault_Handler
  99              		.thumb
 100              		.thumb_func
 102              	UsageFault_Handler:
 103              	.LFB69:
 118:Core/Src/stm32f1xx_it.c ****   /* USER CODE BEGIN BusFault_IRQn 0 */
 119:Core/Src/stm32f1xx_it.c **** 
 120:Core/Src/stm32f1xx_it.c ****   /* USER CODE END BusFault_IRQn 0 */
 121:Core/Src/stm32f1xx_it.c ****   while (1)
 122:Core/Src/stm32f1xx_it.c ****   {
 123:Core/Src/stm32f1xx_it.c ****     /* USER CODE BEGIN W1_BusFault_IRQn 0 */
 124:Core/Src/stm32f1xx_it.c ****     /* USER CODE END W1_BusFault_IRQn 0 */
 125:Core/Src/stm32f1xx_it.c ****   }
 126:Core/Src/stm32f1xx_it.c **** }
 127:Core/Src/stm32f1xx_it.c **** 
 128:Core/Src/stm32f1xx_it.c **** /**
 129:Core/Src/stm32f1xx_it.c ****   * @brief This function handles Undefined instruction or illegal state.
 130:Core/Src/stm32f1xx_it.c ****   */
 131:Core/Src/stm32f1xx_it.c **** void UsageFault_Handler(void)
 132:Core/Src/stm32f1xx_it.c **** {
 104              		.loc 1 132 0
 105              		.cfi_startproc
ARM GAS  C:\Users\master\AppData\Local\Temp\cc4FNLn8.s 			page 5


 106              		@ Volatile: function does not return.
 107              		@ args = 0, pretend = 0, frame = 0
 108              		@ frame_needed = 0, uses_anonymous_args = 0
 109              		@ link register save eliminated.
 110              	.L10:
 111 0000 FEE7     		b	.L10
 112              		.cfi_endproc
 113              	.LFE69:
 115 0002 00BF     		.section	.text.SVC_Handler,"ax",%progbits
 116              		.align	2
 117              		.global	SVC_Handler
 118              		.thumb
 119              		.thumb_func
 121              	SVC_Handler:
 122              	.LFB70:
 133:Core/Src/stm32f1xx_it.c ****   /* USER CODE BEGIN UsageFault_IRQn 0 */
 134:Core/Src/stm32f1xx_it.c **** 
 135:Core/Src/stm32f1xx_it.c ****   /* USER CODE END UsageFault_IRQn 0 */
 136:Core/Src/stm32f1xx_it.c ****   while (1)
 137:Core/Src/stm32f1xx_it.c ****   {
 138:Core/Src/stm32f1xx_it.c ****     /* USER CODE BEGIN W1_UsageFault_IRQn 0 */
 139:Core/Src/stm32f1xx_it.c ****     /* USER CODE END W1_UsageFault_IRQn 0 */
 140:Core/Src/stm32f1xx_it.c ****   }
 141:Core/Src/stm32f1xx_it.c **** }
 142:Core/Src/stm32f1xx_it.c **** 
 143:Core/Src/stm32f1xx_it.c **** /**
 144:Core/Src/stm32f1xx_it.c ****   * @brief This function handles System service call via SWI instruction.
 145:Core/Src/stm32f1xx_it.c ****   */
 146:Core/Src/stm32f1xx_it.c **** void SVC_Handler(void)
 147:Core/Src/stm32f1xx_it.c **** {
 123              		.loc 1 147 0
 124              		.cfi_startproc
 125              		@ args = 0, pretend = 0, frame = 0
 126              		@ frame_needed = 0, uses_anonymous_args = 0
 127              		@ link register save eliminated.
 128 0000 7047     		bx	lr
 129              		.cfi_endproc
 130              	.LFE70:
 132 0002 00BF     		.section	.text.DebugMon_Handler,"ax",%progbits
 133              		.align	2
 134              		.global	DebugMon_Handler
 135              		.thumb
 136              		.thumb_func
 138              	DebugMon_Handler:
 139              	.LFB71:
 148:Core/Src/stm32f1xx_it.c ****   /* USER CODE BEGIN SVCall_IRQn 0 */
 149:Core/Src/stm32f1xx_it.c **** 
 150:Core/Src/stm32f1xx_it.c ****   /* USER CODE END SVCall_IRQn 0 */
 151:Core/Src/stm32f1xx_it.c ****   /* USER CODE BEGIN SVCall_IRQn 1 */
 152:Core/Src/stm32f1xx_it.c **** 
 153:Core/Src/stm32f1xx_it.c ****   /* USER CODE END SVCall_IRQn 1 */
 154:Core/Src/stm32f1xx_it.c **** }
 155:Core/Src/stm32f1xx_it.c **** 
 156:Core/Src/stm32f1xx_it.c **** /**
 157:Core/Src/stm32f1xx_it.c ****   * @brief This function handles Debug monitor.
 158:Core/Src/stm32f1xx_it.c ****   */
 159:Core/Src/stm32f1xx_it.c **** void DebugMon_Handler(void)
ARM GAS  C:\Users\master\AppData\Local\Temp\cc4FNLn8.s 			page 6


 160:Core/Src/stm32f1xx_it.c **** {
 140              		.loc 1 160 0
 141              		.cfi_startproc
 142              		@ args = 0, pretend = 0, frame = 0
 143              		@ frame_needed = 0, uses_anonymous_args = 0
 144              		@ link register save eliminated.
 145 0000 7047     		bx	lr
 146              		.cfi_endproc
 147              	.LFE71:
 149 0002 00BF     		.section	.text.PendSV_Handler,"ax",%progbits
 150              		.align	2
 151              		.global	PendSV_Handler
 152              		.thumb
 153              		.thumb_func
 155              	PendSV_Handler:
 156              	.LFB72:
 161:Core/Src/stm32f1xx_it.c ****   /* USER CODE BEGIN DebugMonitor_IRQn 0 */
 162:Core/Src/stm32f1xx_it.c **** 
 163:Core/Src/stm32f1xx_it.c ****   /* USER CODE END DebugMonitor_IRQn 0 */
 164:Core/Src/stm32f1xx_it.c ****   /* USER CODE BEGIN DebugMonitor_IRQn 1 */
 165:Core/Src/stm32f1xx_it.c **** 
 166:Core/Src/stm32f1xx_it.c ****   /* USER CODE END DebugMonitor_IRQn 1 */
 167:Core/Src/stm32f1xx_it.c **** }
 168:Core/Src/stm32f1xx_it.c **** 
 169:Core/Src/stm32f1xx_it.c **** /**
 170:Core/Src/stm32f1xx_it.c ****   * @brief This function handles Pendable request for system service.
 171:Core/Src/stm32f1xx_it.c ****   */
 172:Core/Src/stm32f1xx_it.c **** void PendSV_Handler(void)
 173:Core/Src/stm32f1xx_it.c **** {
 157              		.loc 1 173 0
 158              		.cfi_startproc
 159              		@ args = 0, pretend = 0, frame = 0
 160              		@ frame_needed = 0, uses_anonymous_args = 0
 161              		@ link register save eliminated.
 162 0000 7047     		bx	lr
 163              		.cfi_endproc
 164              	.LFE72:
 166 0002 00BF     		.section	.text.SysTick_Handler,"ax",%progbits
 167              		.align	2
 168              		.global	SysTick_Handler
 169              		.thumb
 170              		.thumb_func
 172              	SysTick_Handler:
 173              	.LFB73:
 174:Core/Src/stm32f1xx_it.c ****   /* USER CODE BEGIN PendSV_IRQn 0 */
 175:Core/Src/stm32f1xx_it.c **** 
 176:Core/Src/stm32f1xx_it.c ****   /* USER CODE END PendSV_IRQn 0 */
 177:Core/Src/stm32f1xx_it.c ****   /* USER CODE BEGIN PendSV_IRQn 1 */
 178:Core/Src/stm32f1xx_it.c **** 
 179:Core/Src/stm32f1xx_it.c ****   /* USER CODE END PendSV_IRQn 1 */
 180:Core/Src/stm32f1xx_it.c **** }
 181:Core/Src/stm32f1xx_it.c **** 
 182:Core/Src/stm32f1xx_it.c **** /**
 183:Core/Src/stm32f1xx_it.c ****   * @brief This function handles System tick timer.
 184:Core/Src/stm32f1xx_it.c ****   */
 185:Core/Src/stm32f1xx_it.c **** void SysTick_Handler(void)
 186:Core/Src/stm32f1xx_it.c **** {
ARM GAS  C:\Users\master\AppData\Local\Temp\cc4FNLn8.s 			page 7


 174              		.loc 1 186 0
 175              		.cfi_startproc
 176              		@ args = 0, pretend = 0, frame = 0
 177              		@ frame_needed = 0, uses_anonymous_args = 0
 178              		.loc 1 186 0
 179 0000 08B5     		push	{r3, lr}
 180              	.LCFI0:
 181              		.cfi_def_cfa_offset 8
 182              		.cfi_offset 3, -8
 183              		.cfi_offset 14, -4
 187:Core/Src/stm32f1xx_it.c ****   /* USER CODE BEGIN SysTick_IRQn 0 */
 188:Core/Src/stm32f1xx_it.c **** 
 189:Core/Src/stm32f1xx_it.c ****   /* USER CODE END SysTick_IRQn 0 */
 190:Core/Src/stm32f1xx_it.c ****   HAL_IncTick();
 184              		.loc 1 190 0
 185 0002 FFF7FEFF 		bl	HAL_IncTick
 186              	.LVL0:
 187 0006 08BD     		pop	{r3, pc}
 188              		.cfi_endproc
 189              	.LFE73:
 191              		.section	.text.TIM2_IRQHandler,"ax",%progbits
 192              		.align	2
 193              		.global	TIM2_IRQHandler
 194              		.thumb
 195              		.thumb_func
 197              	TIM2_IRQHandler:
 198              	.LFB74:
 191:Core/Src/stm32f1xx_it.c ****   /* USER CODE BEGIN SysTick_IRQn 1 */
 192:Core/Src/stm32f1xx_it.c **** 
 193:Core/Src/stm32f1xx_it.c ****   /* USER CODE END SysTick_IRQn 1 */
 194:Core/Src/stm32f1xx_it.c **** }
 195:Core/Src/stm32f1xx_it.c **** 
 196:Core/Src/stm32f1xx_it.c **** /******************************************************************************/
 197:Core/Src/stm32f1xx_it.c **** /* STM32F1xx Peripheral Interrupt Handlers                                    */
 198:Core/Src/stm32f1xx_it.c **** /* Add here the Interrupt Handlers for the used peripherals.                  */
 199:Core/Src/stm32f1xx_it.c **** /* For the available peripheral interrupt handler names,                      */
 200:Core/Src/stm32f1xx_it.c **** /* please refer to the startup file (startup_stm32f1xx.s).                    */
 201:Core/Src/stm32f1xx_it.c **** /******************************************************************************/
 202:Core/Src/stm32f1xx_it.c **** 
 203:Core/Src/stm32f1xx_it.c **** /**
 204:Core/Src/stm32f1xx_it.c ****   * @brief This function handles TIM2 global interrupt.
 205:Core/Src/stm32f1xx_it.c ****   */
 206:Core/Src/stm32f1xx_it.c **** void TIM2_IRQHandler(void)
 207:Core/Src/stm32f1xx_it.c **** {
 199              		.loc 1 207 0
 200              		.cfi_startproc
 201              		@ args = 0, pretend = 0, frame = 0
 202              		@ frame_needed = 0, uses_anonymous_args = 0
 203 0000 08B5     		push	{r3, lr}
 204              	.LCFI1:
 205              		.cfi_def_cfa_offset 8
 206              		.cfi_offset 3, -8
 207              		.cfi_offset 14, -4
 208:Core/Src/stm32f1xx_it.c ****   /* USER CODE BEGIN TIM2_IRQn 0 */
 209:Core/Src/stm32f1xx_it.c **** 
 210:Core/Src/stm32f1xx_it.c ****   /* USER CODE END TIM2_IRQn 0 */
 211:Core/Src/stm32f1xx_it.c ****   HAL_TIM_IRQHandler(&htim2);
ARM GAS  C:\Users\master\AppData\Local\Temp\cc4FNLn8.s 			page 8


 208              		.loc 1 211 0
 209 0002 0248     		ldr	r0, .L18
 210 0004 FFF7FEFF 		bl	HAL_TIM_IRQHandler
 211              	.LVL1:
 212 0008 08BD     		pop	{r3, pc}
 213              	.L19:
 214 000a 00BF     		.align	2
 215              	.L18:
 216 000c 00000000 		.word	htim2
 217              		.cfi_endproc
 218              	.LFE74:
 220              		.section	.text.I2C1_EV_IRQHandler,"ax",%progbits
 221              		.align	2
 222              		.global	I2C1_EV_IRQHandler
 223              		.thumb
 224              		.thumb_func
 226              	I2C1_EV_IRQHandler:
 227              	.LFB75:
 212:Core/Src/stm32f1xx_it.c ****   /* USER CODE BEGIN TIM2_IRQn 1 */
 213:Core/Src/stm32f1xx_it.c **** 
 214:Core/Src/stm32f1xx_it.c ****   /* USER CODE END TIM2_IRQn 1 */
 215:Core/Src/stm32f1xx_it.c **** }
 216:Core/Src/stm32f1xx_it.c **** 
 217:Core/Src/stm32f1xx_it.c **** /**
 218:Core/Src/stm32f1xx_it.c ****   * @brief This function handles I2C1 event interrupt.
 219:Core/Src/stm32f1xx_it.c ****   */
 220:Core/Src/stm32f1xx_it.c **** void I2C1_EV_IRQHandler(void)
 221:Core/Src/stm32f1xx_it.c **** {
 228              		.loc 1 221 0
 229              		.cfi_startproc
 230              		@ args = 0, pretend = 0, frame = 0
 231              		@ frame_needed = 0, uses_anonymous_args = 0
 232 0000 08B5     		push	{r3, lr}
 233              	.LCFI2:
 234              		.cfi_def_cfa_offset 8
 235              		.cfi_offset 3, -8
 236              		.cfi_offset 14, -4
 222:Core/Src/stm32f1xx_it.c ****   /* USER CODE BEGIN I2C1_EV_IRQn 0 */
 223:Core/Src/stm32f1xx_it.c **** 
 224:Core/Src/stm32f1xx_it.c ****   /* USER CODE END I2C1_EV_IRQn 0 */
 225:Core/Src/stm32f1xx_it.c ****   HAL_I2C_EV_IRQHandler(&hi2c1);
 237              		.loc 1 225 0
 238 0002 0248     		ldr	r0, .L22
 239 0004 FFF7FEFF 		bl	HAL_I2C_EV_IRQHandler
 240              	.LVL2:
 241 0008 08BD     		pop	{r3, pc}
 242              	.L23:
 243 000a 00BF     		.align	2
 244              	.L22:
 245 000c 00000000 		.word	hi2c1
 246              		.cfi_endproc
 247              	.LFE75:
 249              		.text
 250              	.Letext0:
 251              		.file 2 "c:\\program files (x86)\\gnu tools arm embedded\\5.4 2016q3\\arm-none-eabi\\include\\mach
 252              		.file 3 "c:\\program files (x86)\\gnu tools arm embedded\\5.4 2016q3\\arm-none-eabi\\include\\sys\
 253              		.file 4 "Drivers/CMSIS/Device/ST/STM32F1xx/Include/stm32f103xb.h"
ARM GAS  C:\Users\master\AppData\Local\Temp\cc4FNLn8.s 			page 9


 254              		.file 5 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_def.h"
 255              		.file 6 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_dma.h"
 256              		.file 7 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_i2c.h"
 257              		.file 8 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_tim.h"
 258              		.file 9 "Drivers/CMSIS/Include/core_cm3.h"
 259              		.file 10 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal.h"
ARM GAS  C:\Users\master\AppData\Local\Temp\cc4FNLn8.s 			page 10


DEFINED SYMBOLS
                            *ABS*:00000000 stm32f1xx_it.c
C:\Users\master\AppData\Local\Temp\cc4FNLn8.s:20     .text.NMI_Handler:00000000 $t
C:\Users\master\AppData\Local\Temp\cc4FNLn8.s:25     .text.NMI_Handler:00000000 NMI_Handler
C:\Users\master\AppData\Local\Temp\cc4FNLn8.s:40     .text.HardFault_Handler:00000000 $t
C:\Users\master\AppData\Local\Temp\cc4FNLn8.s:45     .text.HardFault_Handler:00000000 HardFault_Handler
C:\Users\master\AppData\Local\Temp\cc4FNLn8.s:59     .text.MemManage_Handler:00000000 $t
C:\Users\master\AppData\Local\Temp\cc4FNLn8.s:64     .text.MemManage_Handler:00000000 MemManage_Handler
C:\Users\master\AppData\Local\Temp\cc4FNLn8.s:78     .text.BusFault_Handler:00000000 $t
C:\Users\master\AppData\Local\Temp\cc4FNLn8.s:83     .text.BusFault_Handler:00000000 BusFault_Handler
C:\Users\master\AppData\Local\Temp\cc4FNLn8.s:97     .text.UsageFault_Handler:00000000 $t
C:\Users\master\AppData\Local\Temp\cc4FNLn8.s:102    .text.UsageFault_Handler:00000000 UsageFault_Handler
C:\Users\master\AppData\Local\Temp\cc4FNLn8.s:116    .text.SVC_Handler:00000000 $t
C:\Users\master\AppData\Local\Temp\cc4FNLn8.s:121    .text.SVC_Handler:00000000 SVC_Handler
C:\Users\master\AppData\Local\Temp\cc4FNLn8.s:133    .text.DebugMon_Handler:00000000 $t
C:\Users\master\AppData\Local\Temp\cc4FNLn8.s:138    .text.DebugMon_Handler:00000000 DebugMon_Handler
C:\Users\master\AppData\Local\Temp\cc4FNLn8.s:150    .text.PendSV_Handler:00000000 $t
C:\Users\master\AppData\Local\Temp\cc4FNLn8.s:155    .text.PendSV_Handler:00000000 PendSV_Handler
C:\Users\master\AppData\Local\Temp\cc4FNLn8.s:167    .text.SysTick_Handler:00000000 $t
C:\Users\master\AppData\Local\Temp\cc4FNLn8.s:172    .text.SysTick_Handler:00000000 SysTick_Handler
C:\Users\master\AppData\Local\Temp\cc4FNLn8.s:192    .text.TIM2_IRQHandler:00000000 $t
C:\Users\master\AppData\Local\Temp\cc4FNLn8.s:197    .text.TIM2_IRQHandler:00000000 TIM2_IRQHandler
C:\Users\master\AppData\Local\Temp\cc4FNLn8.s:216    .text.TIM2_IRQHandler:0000000c $d
C:\Users\master\AppData\Local\Temp\cc4FNLn8.s:221    .text.I2C1_EV_IRQHandler:00000000 $t
C:\Users\master\AppData\Local\Temp\cc4FNLn8.s:226    .text.I2C1_EV_IRQHandler:00000000 I2C1_EV_IRQHandler
C:\Users\master\AppData\Local\Temp\cc4FNLn8.s:245    .text.I2C1_EV_IRQHandler:0000000c $d
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
HAL_IncTick
HAL_TIM_IRQHandler
htim2
HAL_I2C_EV_IRQHandler
hi2c1
