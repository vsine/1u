ARM GAS  C:\Users\master\AppData\Local\Temp\ccNro0KL.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"u8x8_input_value.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.u8x8_UserInterfaceInputValue,"ax",%progbits
  20              		.align	2
  21              		.global	u8x8_UserInterfaceInputValue
  22              		.thumb
  23              		.thumb_func
  25              	u8x8_UserInterfaceInputValue:
  26              	.LFB0:
  27              		.file 1 "u8g2_lib/u8x8_input_value.c"
   1:u8g2_lib/u8x8_input_value.c **** /*
   2:u8g2_lib/u8x8_input_value.c **** 
   3:u8g2_lib/u8x8_input_value.c ****   u8x8_input_value.c
   4:u8g2_lib/u8x8_input_value.c ****   
   5:u8g2_lib/u8x8_input_value.c ****   Universal 8bit Graphics Library (https://github.com/olikraus/u8g2/)
   6:u8g2_lib/u8x8_input_value.c **** 
   7:u8g2_lib/u8x8_input_value.c ****   Copyright (c) 2016, olikraus@gmail.com
   8:u8g2_lib/u8x8_input_value.c ****   All rights reserved.
   9:u8g2_lib/u8x8_input_value.c **** 
  10:u8g2_lib/u8x8_input_value.c ****   Redistribution and use in source and binary forms, with or without modification, 
  11:u8g2_lib/u8x8_input_value.c ****   are permitted provided that the following conditions are met:
  12:u8g2_lib/u8x8_input_value.c **** 
  13:u8g2_lib/u8x8_input_value.c ****   * Redistributions of source code must retain the above copyright notice, this list 
  14:u8g2_lib/u8x8_input_value.c ****     of conditions and the following disclaimer.
  15:u8g2_lib/u8x8_input_value.c ****     
  16:u8g2_lib/u8x8_input_value.c ****   * Redistributions in binary form must reproduce the above copyright notice, this 
  17:u8g2_lib/u8x8_input_value.c ****     list of conditions and the following disclaimer in the documentation and/or other 
  18:u8g2_lib/u8x8_input_value.c ****     materials provided with the distribution.
  19:u8g2_lib/u8x8_input_value.c **** 
  20:u8g2_lib/u8x8_input_value.c ****   THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND 
  21:u8g2_lib/u8x8_input_value.c ****   CONTRIBUTORS "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, 
  22:u8g2_lib/u8x8_input_value.c ****   INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF 
  23:u8g2_lib/u8x8_input_value.c ****   MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE 
  24:u8g2_lib/u8x8_input_value.c ****   DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR 
  25:u8g2_lib/u8x8_input_value.c ****   CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, 
  26:u8g2_lib/u8x8_input_value.c ****   SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT 
  27:u8g2_lib/u8x8_input_value.c ****   NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; 
  28:u8g2_lib/u8x8_input_value.c ****   LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER 
  29:u8g2_lib/u8x8_input_value.c ****   CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, 
  30:u8g2_lib/u8x8_input_value.c ****   STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) 
  31:u8g2_lib/u8x8_input_value.c ****   ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF 
ARM GAS  C:\Users\master\AppData\Local\Temp\ccNro0KL.s 			page 2


  32:u8g2_lib/u8x8_input_value.c ****   ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.  
  33:u8g2_lib/u8x8_input_value.c ****   
  34:u8g2_lib/u8x8_input_value.c **** */
  35:u8g2_lib/u8x8_input_value.c **** 
  36:u8g2_lib/u8x8_input_value.c **** #include "u8x8.h"
  37:u8g2_lib/u8x8_input_value.c **** 
  38:u8g2_lib/u8x8_input_value.c **** /*
  39:u8g2_lib/u8x8_input_value.c ****   return:
  40:u8g2_lib/u8x8_input_value.c ****     0: value is not changed (HOME/Break Button pressed)
  41:u8g2_lib/u8x8_input_value.c ****     1: value has been updated
  42:u8g2_lib/u8x8_input_value.c **** */
  43:u8g2_lib/u8x8_input_value.c **** 
  44:u8g2_lib/u8x8_input_value.c **** uint8_t u8x8_UserInterfaceInputValue(u8x8_t *u8x8, const char *title, const char *pre, uint8_t *val
  45:u8g2_lib/u8x8_input_value.c **** {
  28              		.loc 1 45 0
  29              		.cfi_startproc
  30              		@ args = 16, pretend = 0, frame = 8
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              	.LVL0:
  33 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
  34              	.LCFI0:
  35              		.cfi_def_cfa_offset 36
  36              		.cfi_offset 4, -36
  37              		.cfi_offset 5, -32
  38              		.cfi_offset 6, -28
  39              		.cfi_offset 7, -24
  40              		.cfi_offset 8, -20
  41              		.cfi_offset 9, -16
  42              		.cfi_offset 10, -12
  43              		.cfi_offset 11, -8
  44              		.cfi_offset 14, -4
  45 0004 85B0     		sub	sp, sp, #20
  46              	.LCFI1:
  47              		.cfi_def_cfa_offset 56
  48 0006 0546     		mov	r5, r0
  49 0008 0391     		str	r1, [sp, #12]
  50 000a 0292     		str	r2, [sp, #8]
  51 000c 9B46     		mov	fp, r3
  52 000e 9DF83890 		ldrb	r9, [sp, #56]	@ zero_extendqisi2
  53 0012 9DF83C80 		ldrb	r8, [sp, #60]	@ zero_extendqisi2
  54 0016 9DF84060 		ldrb	r6, [sp, #64]	@ zero_extendqisi2
  46:u8g2_lib/u8x8_input_value.c ****   uint8_t height;
  47:u8g2_lib/u8x8_input_value.c ****   uint8_t y;
  48:u8g2_lib/u8x8_input_value.c ****   uint8_t width;
  49:u8g2_lib/u8x8_input_value.c ****   uint8_t x;
  50:u8g2_lib/u8x8_input_value.c ****   uint8_t local_value = *value;
  55              		.loc 1 50 0
  56 001a 1C78     		ldrb	r4, [r3]	@ zero_extendqisi2
  57              	.LVL1:
  51:u8g2_lib/u8x8_input_value.c ****   uint8_t r;
  52:u8g2_lib/u8x8_input_value.c ****   uint8_t event;
  53:u8g2_lib/u8x8_input_value.c **** 
  54:u8g2_lib/u8x8_input_value.c ****   /* calculate overall height of the input value box */
  55:u8g2_lib/u8x8_input_value.c ****   height = 1;	/* button line */
  56:u8g2_lib/u8x8_input_value.c ****   height += u8x8_GetStringLineCnt(title);
  58              		.loc 1 56 0
  59 001c 0846     		mov	r0, r1
ARM GAS  C:\Users\master\AppData\Local\Temp\ccNro0KL.s 			page 3


  60              	.LVL2:
  61 001e FFF7FEFF 		bl	u8x8_GetStringLineCnt
  62              	.LVL3:
  63 0022 0130     		adds	r0, r0, #1
  64 0024 C0B2     		uxtb	r0, r0
  65              	.LVL4:
  57:u8g2_lib/u8x8_input_value.c ****   
  58:u8g2_lib/u8x8_input_value.c ****   /* calculate offset from top */
  59:u8g2_lib/u8x8_input_value.c ****   y = 0;
  60:u8g2_lib/u8x8_input_value.c ****   if ( height < u8x8_GetRows(u8x8)  )
  66              		.loc 1 60 0
  67 0026 2B68     		ldr	r3, [r5]
  68 0028 5B7C     		ldrb	r3, [r3, #17]	@ zero_extendqisi2
  69 002a 9842     		cmp	r0, r3
  70 002c 03D2     		bcs	.L13
  71              	.LVL5:
  61:u8g2_lib/u8x8_input_value.c ****   {
  62:u8g2_lib/u8x8_input_value.c ****     y = u8x8_GetRows(u8x8);
  63:u8g2_lib/u8x8_input_value.c ****     y -= height;
  72              		.loc 1 63 0
  73 002e 181A     		subs	r0, r3, r0
  74              	.LVL6:
  64:u8g2_lib/u8x8_input_value.c ****     y /= 2;
  75              		.loc 1 64 0
  76 0030 C0F3460A 		ubfx	r10, r0, #1, #7
  77              	.LVL7:
  78 0034 01E0     		b	.L2
  79              	.LVL8:
  80              	.L13:
  59:u8g2_lib/u8x8_input_value.c ****   if ( height < u8x8_GetRows(u8x8)  )
  81              		.loc 1 59 0
  82 0036 4FF0000A 		mov	r10, #0
  83              	.LVL9:
  84              	.L2:
  65:u8g2_lib/u8x8_input_value.c ****   }
  66:u8g2_lib/u8x8_input_value.c ****   
  67:u8g2_lib/u8x8_input_value.c ****   /* calculate offset from left for the label */
  68:u8g2_lib/u8x8_input_value.c ****   x = 0;
  69:u8g2_lib/u8x8_input_value.c ****   width = u8x8_GetUTF8Len(u8x8, pre);
  85              		.loc 1 69 0
  86 003a 0299     		ldr	r1, [sp, #8]
  87 003c 2846     		mov	r0, r5
  88 003e FFF7FEFF 		bl	u8x8_GetUTF8Len
  89              	.LVL10:
  70:u8g2_lib/u8x8_input_value.c ****   width += digits;
  90              		.loc 1 70 0
  91 0042 3044     		add	r0, r0, r6
  92              	.LVL11:
  93 0044 C7B2     		uxtb	r7, r0
  94              	.LVL12:
  71:u8g2_lib/u8x8_input_value.c ****   width += u8x8_GetUTF8Len(u8x8, post);
  95              		.loc 1 71 0
  96 0046 1199     		ldr	r1, [sp, #68]
  97 0048 2846     		mov	r0, r5
  98 004a FFF7FEFF 		bl	u8x8_GetUTF8Len
  99              	.LVL13:
 100 004e 3844     		add	r0, r0, r7
ARM GAS  C:\Users\master\AppData\Local\Temp\ccNro0KL.s 			page 4


 101 0050 C0B2     		uxtb	r0, r0
 102              	.LVL14:
  72:u8g2_lib/u8x8_input_value.c ****   if ( width < u8x8_GetCols(u8x8) )
 103              		.loc 1 72 0
 104 0052 2B68     		ldr	r3, [r5]
 105 0054 1F7C     		ldrb	r7, [r3, #16]	@ zero_extendqisi2
 106 0056 B842     		cmp	r0, r7
 107 0058 03D2     		bcs	.L14
 108              	.LVL15:
  73:u8g2_lib/u8x8_input_value.c ****   {
  74:u8g2_lib/u8x8_input_value.c ****     x = u8x8_GetCols(u8x8);
  75:u8g2_lib/u8x8_input_value.c ****     x -= width;
 109              		.loc 1 75 0
 110 005a 3F1A     		subs	r7, r7, r0
 111              	.LVL16:
  76:u8g2_lib/u8x8_input_value.c ****     x /= 2;
 112              		.loc 1 76 0
 113 005c C7F34607 		ubfx	r7, r7, #1, #7
 114              	.LVL17:
 115 0060 00E0     		b	.L3
 116              	.LVL18:
 117              	.L14:
  68:u8g2_lib/u8x8_input_value.c ****   width = u8x8_GetUTF8Len(u8x8, pre);
 118              		.loc 1 68 0
 119 0062 0027     		movs	r7, #0
 120              	.LVL19:
 121              	.L3:
  77:u8g2_lib/u8x8_input_value.c ****   }
  78:u8g2_lib/u8x8_input_value.c ****   
  79:u8g2_lib/u8x8_input_value.c ****   /* render */
  80:u8g2_lib/u8x8_input_value.c ****   u8x8_ClearDisplay(u8x8);   /* required, because not everything is filled */
 122              		.loc 1 80 0
 123 0064 2846     		mov	r0, r5
 124              	.LVL20:
 125 0066 FFF7FEFF 		bl	u8x8_ClearDisplay
 126              	.LVL21:
  81:u8g2_lib/u8x8_input_value.c ****   u8x8_SetInverseFont(u8x8, 0);  
 127              		.loc 1 81 0
 128 006a 0021     		movs	r1, #0
 129 006c 85F82310 		strb	r1, [r5, #35]
  82:u8g2_lib/u8x8_input_value.c ****   y += u8x8_DrawUTF8Lines(u8x8, 0, y, u8x8_GetCols(u8x8), title);
 130              		.loc 1 82 0
 131 0070 2B68     		ldr	r3, [r5]
 132 0072 1B7C     		ldrb	r3, [r3, #16]	@ zero_extendqisi2
 133 0074 039A     		ldr	r2, [sp, #12]
 134 0076 0092     		str	r2, [sp]
 135 0078 5246     		mov	r2, r10
 136 007a 2846     		mov	r0, r5
 137 007c FFF7FEFF 		bl	u8x8_DrawUTF8Lines
 138              	.LVL22:
 139 0080 5044     		add	r0, r0, r10
 140 0082 5FFA80FA 		uxtb	r10, r0
 141              	.LVL23:
  83:u8g2_lib/u8x8_input_value.c ****   x += u8x8_DrawUTF8(u8x8, x, y, pre);
 142              		.loc 1 83 0
 143 0086 029B     		ldr	r3, [sp, #8]
 144 0088 5246     		mov	r2, r10
ARM GAS  C:\Users\master\AppData\Local\Temp\ccNro0KL.s 			page 5


 145 008a 3946     		mov	r1, r7
 146 008c 2846     		mov	r0, r5
 147 008e FFF7FEFF 		bl	u8x8_DrawUTF8
 148              	.LVL24:
 149 0092 3844     		add	r0, r0, r7
 150 0094 C7B2     		uxtb	r7, r0
 151              	.LVL25:
  84:u8g2_lib/u8x8_input_value.c ****   u8x8_DrawUTF8(u8x8, x+digits, y, post);
 152              		.loc 1 84 0
 153 0096 F119     		adds	r1, r6, r7
 154 0098 119B     		ldr	r3, [sp, #68]
 155 009a 5246     		mov	r2, r10
 156 009c C9B2     		uxtb	r1, r1
 157 009e 2846     		mov	r0, r5
 158 00a0 FFF7FEFF 		bl	u8x8_DrawUTF8
 159              	.LVL26:
  85:u8g2_lib/u8x8_input_value.c ****   u8x8_SetInverseFont(u8x8, 1);
 160              		.loc 1 85 0
 161 00a4 0123     		movs	r3, #1
 162 00a6 85F82330 		strb	r3, [r5, #35]
  86:u8g2_lib/u8x8_input_value.c ****   
  87:u8g2_lib/u8x8_input_value.c ****   /* event loop */
  88:u8g2_lib/u8x8_input_value.c ****   u8x8_DrawUTF8(u8x8, x, y, u8x8_u8toa(local_value, digits));
 163              		.loc 1 88 0
 164 00aa 3146     		mov	r1, r6
 165 00ac 2046     		mov	r0, r4
 166 00ae FFF7FEFF 		bl	u8x8_u8toa
 167              	.LVL27:
 168 00b2 0346     		mov	r3, r0
 169 00b4 5246     		mov	r2, r10
 170 00b6 3946     		mov	r1, r7
 171 00b8 2846     		mov	r0, r5
 172 00ba FFF7FEFF 		bl	u8x8_DrawUTF8
 173              	.LVL28:
 174              	.L4:
  89:u8g2_lib/u8x8_input_value.c ****   for(;;)
  90:u8g2_lib/u8x8_input_value.c ****   {
  91:u8g2_lib/u8x8_input_value.c ****     event = u8x8_GetMenuEvent(u8x8);
 175              		.loc 1 91 0
 176 00be 2846     		mov	r0, r5
 177 00c0 FFF7FEFF 		bl	u8x8_GetMenuEvent
 178              	.LVL29:
  92:u8g2_lib/u8x8_input_value.c ****     if ( event == U8X8_MSG_GPIO_MENU_SELECT )
 179              		.loc 1 92 0
 180 00c4 5028     		cmp	r0, #80
 181 00c6 03D1     		bne	.L5
  93:u8g2_lib/u8x8_input_value.c ****     {
  94:u8g2_lib/u8x8_input_value.c ****       *value = local_value;
 182              		.loc 1 94 0
 183 00c8 8BF80040 		strb	r4, [fp]
 184              	.LVL30:
  95:u8g2_lib/u8x8_input_value.c ****       r = 1;
 185              		.loc 1 95 0
 186 00cc 0120     		movs	r0, #1
 187              	.LVL31:
  96:u8g2_lib/u8x8_input_value.c ****       break;
 188              		.loc 1 96 0
ARM GAS  C:\Users\master\AppData\Local\Temp\ccNro0KL.s 			page 6


 189 00ce 2CE0     		b	.L6
 190              	.LVL32:
 191              	.L5:
  97:u8g2_lib/u8x8_input_value.c ****     }
  98:u8g2_lib/u8x8_input_value.c ****     else if ( event == U8X8_MSG_GPIO_MENU_HOME )
 192              		.loc 1 98 0
 193 00d0 5328     		cmp	r0, #83
 194 00d2 29D0     		beq	.L15
  99:u8g2_lib/u8x8_input_value.c ****     {
 100:u8g2_lib/u8x8_input_value.c ****       r = 0;
 101:u8g2_lib/u8x8_input_value.c ****       break;
 102:u8g2_lib/u8x8_input_value.c ****     }
 103:u8g2_lib/u8x8_input_value.c ****     else if ( event == U8X8_MSG_GPIO_MENU_NEXT || event == U8X8_MSG_GPIO_MENU_UP )
 195              		.loc 1 103 0
 196 00d4 5128     		cmp	r0, #81
 197 00d6 01D0     		beq	.L7
 198              		.loc 1 103 0 is_stmt 0 discriminator 1
 199 00d8 5428     		cmp	r0, #84
 200 00da 10D1     		bne	.L8
 201              	.L7:
 104:u8g2_lib/u8x8_input_value.c ****     {
 105:u8g2_lib/u8x8_input_value.c ****       if ( local_value >= hi )
 202              		.loc 1 105 0 is_stmt 1
 203 00dc 4445     		cmp	r4, r8
 204 00de 02D2     		bcs	.L16
 106:u8g2_lib/u8x8_input_value.c **** 	local_value = lo;
 107:u8g2_lib/u8x8_input_value.c ****       else
 108:u8g2_lib/u8x8_input_value.c **** 	local_value++;
 205              		.loc 1 108 0
 206 00e0 0134     		adds	r4, r4, #1
 207              	.LVL33:
 208 00e2 E4B2     		uxtb	r4, r4
 209              	.LVL34:
 210 00e4 00E0     		b	.L9
 211              	.L16:
 106:u8g2_lib/u8x8_input_value.c **** 	local_value = lo;
 212              		.loc 1 106 0
 213 00e6 4C46     		mov	r4, r9
 214              	.LVL35:
 215              	.L9:
 109:u8g2_lib/u8x8_input_value.c ****       u8x8_DrawUTF8(u8x8, x, y, u8x8_u8toa(local_value, digits));
 216              		.loc 1 109 0
 217 00e8 3146     		mov	r1, r6
 218 00ea 2046     		mov	r0, r4
 219              	.LVL36:
 220 00ec FFF7FEFF 		bl	u8x8_u8toa
 221              	.LVL37:
 222 00f0 0346     		mov	r3, r0
 223 00f2 5246     		mov	r2, r10
 224 00f4 3946     		mov	r1, r7
 225 00f6 2846     		mov	r0, r5
 226 00f8 FFF7FEFF 		bl	u8x8_DrawUTF8
 227              	.LVL38:
 228 00fc DFE7     		b	.L4
 229              	.LVL39:
 230              	.L8:
 110:u8g2_lib/u8x8_input_value.c ****     }
ARM GAS  C:\Users\master\AppData\Local\Temp\ccNro0KL.s 			page 7


 111:u8g2_lib/u8x8_input_value.c ****     else if ( event == U8X8_MSG_GPIO_MENU_PREV || event == U8X8_MSG_GPIO_MENU_DOWN )
 231              		.loc 1 111 0
 232 00fe 5228     		cmp	r0, #82
 233 0100 01D0     		beq	.L11
 234              		.loc 1 111 0 is_stmt 0 discriminator 1
 235 0102 5528     		cmp	r0, #85
 236 0104 DBD1     		bne	.L4
 237              	.L11:
 112:u8g2_lib/u8x8_input_value.c ****     {
 113:u8g2_lib/u8x8_input_value.c ****       if ( local_value <= lo )
 238              		.loc 1 113 0 is_stmt 1
 239 0106 4C45     		cmp	r4, r9
 240 0108 02D9     		bls	.L17
 114:u8g2_lib/u8x8_input_value.c **** 	local_value = hi;
 115:u8g2_lib/u8x8_input_value.c ****       else
 116:u8g2_lib/u8x8_input_value.c **** 	local_value--;
 241              		.loc 1 116 0
 242 010a 013C     		subs	r4, r4, #1
 243              	.LVL40:
 244 010c E4B2     		uxtb	r4, r4
 245              	.LVL41:
 246 010e 00E0     		b	.L12
 247              	.L17:
 114:u8g2_lib/u8x8_input_value.c **** 	local_value = hi;
 248              		.loc 1 114 0
 249 0110 4446     		mov	r4, r8
 250              	.LVL42:
 251              	.L12:
 117:u8g2_lib/u8x8_input_value.c ****       u8x8_DrawUTF8(u8x8, x, y, u8x8_u8toa(local_value, digits));
 252              		.loc 1 117 0
 253 0112 3146     		mov	r1, r6
 254 0114 2046     		mov	r0, r4
 255              	.LVL43:
 256 0116 FFF7FEFF 		bl	u8x8_u8toa
 257              	.LVL44:
 258 011a 0346     		mov	r3, r0
 259 011c 5246     		mov	r2, r10
 260 011e 3946     		mov	r1, r7
 261 0120 2846     		mov	r0, r5
 262 0122 FFF7FEFF 		bl	u8x8_DrawUTF8
 263              	.LVL45:
 264 0126 CAE7     		b	.L4
 265              	.LVL46:
 266              	.L15:
 100:u8g2_lib/u8x8_input_value.c ****       break;
 267              		.loc 1 100 0
 268 0128 0020     		movs	r0, #0
 269              	.LVL47:
 270              	.L6:
 118:u8g2_lib/u8x8_input_value.c ****     }        
 119:u8g2_lib/u8x8_input_value.c ****   }
 120:u8g2_lib/u8x8_input_value.c ****   
 121:u8g2_lib/u8x8_input_value.c ****   u8x8_SetInverseFont(u8x8, 0);
 271              		.loc 1 121 0
 272 012a 0023     		movs	r3, #0
 273 012c 85F82330 		strb	r3, [r5, #35]
 122:u8g2_lib/u8x8_input_value.c ****   return r;  
ARM GAS  C:\Users\master\AppData\Local\Temp\ccNro0KL.s 			page 8


 123:u8g2_lib/u8x8_input_value.c **** }
 274              		.loc 1 123 0
 275 0130 05B0     		add	sp, sp, #20
 276              	.LCFI2:
 277              		.cfi_def_cfa_offset 36
 278              		@ sp needed
 279 0132 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 280              		.cfi_endproc
 281              	.LFE0:
 283 0136 00BF     		.text
 284              	.Letext0:
 285              		.file 2 "c:\\program files (x86)\\gnu tools arm embedded\\5.4 2016q3\\arm-none-eabi\\include\\mach
 286              		.file 3 "c:\\program files (x86)\\gnu tools arm embedded\\5.4 2016q3\\arm-none-eabi\\include\\sys\
 287              		.file 4 "u8g2_lib/u8x8.h"
ARM GAS  C:\Users\master\AppData\Local\Temp\ccNro0KL.s 			page 9


DEFINED SYMBOLS
                            *ABS*:00000000 u8x8_input_value.c
C:\Users\master\AppData\Local\Temp\ccNro0KL.s:20     .text.u8x8_UserInterfaceInputValue:00000000 $t
C:\Users\master\AppData\Local\Temp\ccNro0KL.s:25     .text.u8x8_UserInterfaceInputValue:00000000 u8x8_UserInterfaceInputValue
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
u8x8_GetStringLineCnt
u8x8_GetUTF8Len
u8x8_ClearDisplay
u8x8_DrawUTF8Lines
u8x8_DrawUTF8
u8x8_u8toa
u8x8_GetMenuEvent
