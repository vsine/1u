ARM GAS  C:\Users\master\AppData\Local\Temp\cc7WFC3d.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"main.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.MX_GPIO_Init,"ax",%progbits
  20              		.align	2
  21              		.thumb
  22              		.thumb_func
  24              	MX_GPIO_Init:
  25              	.LFB72:
  26              		.file 1 "Core/Src/main.c"
   1:Core/Src/main.c **** /* USER CODE BEGIN Header */
   2:Core/Src/main.c **** /**
   3:Core/Src/main.c ****   ******************************************************************************
   4:Core/Src/main.c ****   * @file           : main.c
   5:Core/Src/main.c ****   * @brief          : Main program body
   6:Core/Src/main.c ****   ******************************************************************************
   7:Core/Src/main.c ****   * @attention
   8:Core/Src/main.c ****   *
   9:Core/Src/main.c ****   * <h2><center>&copy; Copyright (c) 2021 STMicroelectronics.
  10:Core/Src/main.c ****   * All rights reserved.</center></h2>
  11:Core/Src/main.c ****   *
  12:Core/Src/main.c ****   * This software component is licensed by ST under BSD 3-Clause license,
  13:Core/Src/main.c ****   * the "License"; You may not use this file except in compliance with the
  14:Core/Src/main.c ****   * License. You may obtain a copy of the License at:
  15:Core/Src/main.c ****   *                        opensource.org/licenses/BSD-3-Clause
  16:Core/Src/main.c ****   *
  17:Core/Src/main.c ****   ******************************************************************************
  18:Core/Src/main.c ****   */
  19:Core/Src/main.c **** /* USER CODE END Header */
  20:Core/Src/main.c **** /* Includes ------------------------------------------------------------------*/
  21:Core/Src/main.c **** #include "main.h"
  22:Core/Src/main.c **** 
  23:Core/Src/main.c **** /* Private includes ----------------------------------------------------------*/
  24:Core/Src/main.c **** /* USER CODE BEGIN Includes */
  25:Core/Src/main.c **** #include <math.h>
  26:Core/Src/main.c **** #include "oled.h"
  27:Core/Src/main.c **** #include "mysetp.h"
  28:Core/Src/main.c **** /* USER CODE END Includes */
  29:Core/Src/main.c **** 
  30:Core/Src/main.c **** /* Private typedef -----------------------------------------------------------*/
  31:Core/Src/main.c **** /* USER CODE BEGIN PTD */
  32:Core/Src/main.c **** 
ARM GAS  C:\Users\master\AppData\Local\Temp\cc7WFC3d.s 			page 2


  33:Core/Src/main.c **** /* USER CODE END PTD */
  34:Core/Src/main.c **** 
  35:Core/Src/main.c **** /* Private define ------------------------------------------------------------*/
  36:Core/Src/main.c **** /* USER CODE BEGIN PD */
  37:Core/Src/main.c **** /* USER CODE END PD */
  38:Core/Src/main.c **** 
  39:Core/Src/main.c **** /* Private macro -------------------------------------------------------------*/
  40:Core/Src/main.c **** /* USER CODE BEGIN PM */
  41:Core/Src/main.c **** 
  42:Core/Src/main.c **** /* USER CODE END PM */
  43:Core/Src/main.c **** 
  44:Core/Src/main.c **** /* Private variables ---------------------------------------------------------*/
  45:Core/Src/main.c **** I2C_HandleTypeDef hi2c1;
  46:Core/Src/main.c **** 
  47:Core/Src/main.c **** TIM_HandleTypeDef htim2;
  48:Core/Src/main.c **** 
  49:Core/Src/main.c **** UART_HandleTypeDef huart1;
  50:Core/Src/main.c **** DMA_HandleTypeDef hdma_usart1_tx;
  51:Core/Src/main.c **** 
  52:Core/Src/main.c **** /* USER CODE BEGIN PV */
  53:Core/Src/main.c **** 
  54:Core/Src/main.c **** /* USER CODE END PV */
  55:Core/Src/main.c **** 
  56:Core/Src/main.c **** /* Private function prototypes -----------------------------------------------*/
  57:Core/Src/main.c **** void SystemClock_Config(void);
  58:Core/Src/main.c **** static void MX_GPIO_Init(void);
  59:Core/Src/main.c **** static void MX_I2C1_Init(void);
  60:Core/Src/main.c **** static void MX_TIM2_Init(void);
  61:Core/Src/main.c **** static void MX_DMA_Init(void);
  62:Core/Src/main.c **** static void MX_USART1_UART_Init(void);
  63:Core/Src/main.c **** /* USER CODE BEGIN PFP */
  64:Core/Src/main.c **** 
  65:Core/Src/main.c **** /* USER CODE END PFP */
  66:Core/Src/main.c **** 
  67:Core/Src/main.c **** /* Private user code ---------------------------------------------------------*/
  68:Core/Src/main.c **** /* USER CODE BEGIN 0 */
  69:Core/Src/main.c **** 
  70:Core/Src/main.c **** /* USER CODE END 0 */
  71:Core/Src/main.c **** 
  72:Core/Src/main.c **** /**
  73:Core/Src/main.c ****   * @brief  The application entry point.
  74:Core/Src/main.c ****   * @retval int
  75:Core/Src/main.c ****   */
  76:Core/Src/main.c **** int main(void)
  77:Core/Src/main.c **** {
  78:Core/Src/main.c ****   /* USER CODE BEGIN 1 */
  79:Core/Src/main.c **** 
  80:Core/Src/main.c ****   /* USER CODE END 1 */
  81:Core/Src/main.c **** 
  82:Core/Src/main.c ****   /* MCU Configuration--------------------------------------------------------*/
  83:Core/Src/main.c **** 
  84:Core/Src/main.c ****   /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
  85:Core/Src/main.c ****   HAL_Init();
  86:Core/Src/main.c **** 
  87:Core/Src/main.c ****   /* USER CODE BEGIN Init */
  88:Core/Src/main.c **** 
  89:Core/Src/main.c ****   /* USER CODE END Init */
ARM GAS  C:\Users\master\AppData\Local\Temp\cc7WFC3d.s 			page 3


  90:Core/Src/main.c **** 
  91:Core/Src/main.c ****   /* Configure the system clock */
  92:Core/Src/main.c ****   SystemClock_Config();
  93:Core/Src/main.c **** 
  94:Core/Src/main.c ****   /* USER CODE BEGIN SysInit */
  95:Core/Src/main.c **** 
  96:Core/Src/main.c ****   /* USER CODE END SysInit */
  97:Core/Src/main.c **** 
  98:Core/Src/main.c ****   /* Initialize all configured peripherals */
  99:Core/Src/main.c ****   MX_GPIO_Init();
 100:Core/Src/main.c ****   MX_I2C1_Init();
 101:Core/Src/main.c ****   MX_TIM2_Init();
 102:Core/Src/main.c ****   MX_DMA_Init();
 103:Core/Src/main.c ****   MX_USART1_UART_Init();
 104:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 105:Core/Src/main.c **** 
 106:Core/Src/main.c ****   /* USER CODE END 2 */
 107:Core/Src/main.c **** 
 108:Core/Src/main.c ****   /* Infinite loop */
 109:Core/Src/main.c ****   /* USER CODE BEGIN WHILE */
 110:Core/Src/main.c ****   while (1)
 111:Core/Src/main.c ****   {
 112:Core/Src/main.c ****     /* USER CODE END WHILE */
 113:Core/Src/main.c **** 
 114:Core/Src/main.c ****     /* USER CODE BEGIN 3 */
 115:Core/Src/main.c ****     
 116:Core/Src/main.c ****     //oledINIT(&hi2c1);
 117:Core/Src/main.c ****     //HAL_GPIO_WritePin(GPIOB, GPIO_PIN_12, GPIO_PIN_SET);
 118:Core/Src/main.c ****    mysetp();
 119:Core/Src/main.c ****    while(1){}
 120:Core/Src/main.c ****   }
 121:Core/Src/main.c ****   /* USER CODE END 3 */
 122:Core/Src/main.c **** }
 123:Core/Src/main.c **** 
 124:Core/Src/main.c **** /**
 125:Core/Src/main.c ****   * @brief System Clock Configuration
 126:Core/Src/main.c ****   * @retval None
 127:Core/Src/main.c ****   */
 128:Core/Src/main.c **** void SystemClock_Config(void)
 129:Core/Src/main.c **** {
 130:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 131:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 132:Core/Src/main.c **** 
 133:Core/Src/main.c ****   /** Initializes the RCC Oscillators according to the specified parameters
 134:Core/Src/main.c ****   * in the RCC_OscInitTypeDef structure.
 135:Core/Src/main.c ****   */
 136:Core/Src/main.c ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSE;
 137:Core/Src/main.c ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 138:Core/Src/main.c ****   RCC_OscInitStruct.HSEPredivValue = RCC_HSE_PREDIV_DIV1;
 139:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 140:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 141:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 142:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLMUL = RCC_PLL_MUL9;
 143:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 144:Core/Src/main.c ****   {
 145:Core/Src/main.c ****     Error_Handler();
 146:Core/Src/main.c ****   }
ARM GAS  C:\Users\master\AppData\Local\Temp\cc7WFC3d.s 			page 4


 147:Core/Src/main.c ****   /** Initializes the CPU, AHB and APB buses clocks
 148:Core/Src/main.c ****   */
 149:Core/Src/main.c ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 150:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 151:Core/Src/main.c ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 152:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 153:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 154:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 155:Core/Src/main.c **** 
 156:Core/Src/main.c ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_2) != HAL_OK)
 157:Core/Src/main.c ****   {
 158:Core/Src/main.c ****     Error_Handler();
 159:Core/Src/main.c ****   }
 160:Core/Src/main.c **** }
 161:Core/Src/main.c **** 
 162:Core/Src/main.c **** /**
 163:Core/Src/main.c ****   * @brief I2C1 Initialization Function
 164:Core/Src/main.c ****   * @param None
 165:Core/Src/main.c ****   * @retval None
 166:Core/Src/main.c ****   */
 167:Core/Src/main.c **** static void MX_I2C1_Init(void)
 168:Core/Src/main.c **** {
 169:Core/Src/main.c **** 
 170:Core/Src/main.c ****   /* USER CODE BEGIN I2C1_Init 0 */
 171:Core/Src/main.c **** 
 172:Core/Src/main.c ****   /* USER CODE END I2C1_Init 0 */
 173:Core/Src/main.c **** 
 174:Core/Src/main.c ****   /* USER CODE BEGIN I2C1_Init 1 */
 175:Core/Src/main.c **** 
 176:Core/Src/main.c ****   /* USER CODE END I2C1_Init 1 */
 177:Core/Src/main.c ****   hi2c1.Instance = I2C1;
 178:Core/Src/main.c ****   hi2c1.Init.ClockSpeed = 400000;
 179:Core/Src/main.c ****   hi2c1.Init.DutyCycle = I2C_DUTYCYCLE_2;
 180:Core/Src/main.c ****   hi2c1.Init.OwnAddress1 = 0;
 181:Core/Src/main.c ****   hi2c1.Init.AddressingMode = I2C_ADDRESSINGMODE_7BIT;
 182:Core/Src/main.c ****   hi2c1.Init.DualAddressMode = I2C_DUALADDRESS_DISABLE;
 183:Core/Src/main.c ****   hi2c1.Init.OwnAddress2 = 0;
 184:Core/Src/main.c ****   hi2c1.Init.GeneralCallMode = I2C_GENERALCALL_DISABLE;
 185:Core/Src/main.c ****   hi2c1.Init.NoStretchMode = I2C_NOSTRETCH_DISABLE;
 186:Core/Src/main.c ****   if (HAL_I2C_Init(&hi2c1) != HAL_OK)
 187:Core/Src/main.c ****   {
 188:Core/Src/main.c ****     Error_Handler();
 189:Core/Src/main.c ****   }
 190:Core/Src/main.c ****   /* USER CODE BEGIN I2C1_Init 2 */
 191:Core/Src/main.c **** 
 192:Core/Src/main.c ****   /* USER CODE END I2C1_Init 2 */
 193:Core/Src/main.c **** 
 194:Core/Src/main.c **** }
 195:Core/Src/main.c **** 
 196:Core/Src/main.c **** /**
 197:Core/Src/main.c ****   * @brief TIM2 Initialization Function
 198:Core/Src/main.c ****   * @param None
 199:Core/Src/main.c ****   * @retval None
 200:Core/Src/main.c ****   */
 201:Core/Src/main.c **** static void MX_TIM2_Init(void)
 202:Core/Src/main.c **** {
 203:Core/Src/main.c **** 
ARM GAS  C:\Users\master\AppData\Local\Temp\cc7WFC3d.s 			page 5


 204:Core/Src/main.c ****   /* USER CODE BEGIN TIM2_Init 0 */
 205:Core/Src/main.c **** 
 206:Core/Src/main.c ****   /* USER CODE END TIM2_Init 0 */
 207:Core/Src/main.c **** 
 208:Core/Src/main.c ****   TIM_ClockConfigTypeDef sClockSourceConfig = {0};
 209:Core/Src/main.c ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 210:Core/Src/main.c **** 
 211:Core/Src/main.c ****   /* USER CODE BEGIN TIM2_Init 1 */
 212:Core/Src/main.c **** 
 213:Core/Src/main.c ****   /* USER CODE END TIM2_Init 1 */
 214:Core/Src/main.c ****   htim2.Instance = TIM2;
 215:Core/Src/main.c ****   htim2.Init.Prescaler = 7199;
 216:Core/Src/main.c ****   htim2.Init.CounterMode = TIM_COUNTERMODE_UP;
 217:Core/Src/main.c ****   htim2.Init.Period = 4999;
 218:Core/Src/main.c ****   htim2.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 219:Core/Src/main.c ****   htim2.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_ENABLE;
 220:Core/Src/main.c ****   if (HAL_TIM_Base_Init(&htim2) != HAL_OK)
 221:Core/Src/main.c ****   {
 222:Core/Src/main.c ****     Error_Handler();
 223:Core/Src/main.c ****   }
 224:Core/Src/main.c ****   sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 225:Core/Src/main.c ****   if (HAL_TIM_ConfigClockSource(&htim2, &sClockSourceConfig) != HAL_OK)
 226:Core/Src/main.c ****   {
 227:Core/Src/main.c ****     Error_Handler();
 228:Core/Src/main.c ****   }
 229:Core/Src/main.c ****   sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 230:Core/Src/main.c ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 231:Core/Src/main.c ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim2, &sMasterConfig) != HAL_OK)
 232:Core/Src/main.c ****   {
 233:Core/Src/main.c ****     Error_Handler();
 234:Core/Src/main.c ****   }
 235:Core/Src/main.c ****   /* USER CODE BEGIN TIM2_Init 2 */
 236:Core/Src/main.c **** 
 237:Core/Src/main.c ****   /* USER CODE END TIM2_Init 2 */
 238:Core/Src/main.c **** 
 239:Core/Src/main.c **** }
 240:Core/Src/main.c **** 
 241:Core/Src/main.c **** /**
 242:Core/Src/main.c ****   * @brief USART1 Initialization Function
 243:Core/Src/main.c ****   * @param None
 244:Core/Src/main.c ****   * @retval None
 245:Core/Src/main.c ****   */
 246:Core/Src/main.c **** static void MX_USART1_UART_Init(void)
 247:Core/Src/main.c **** {
 248:Core/Src/main.c **** 
 249:Core/Src/main.c ****   /* USER CODE BEGIN USART1_Init 0 */
 250:Core/Src/main.c **** 
 251:Core/Src/main.c ****   /* USER CODE END USART1_Init 0 */
 252:Core/Src/main.c **** 
 253:Core/Src/main.c ****   /* USER CODE BEGIN USART1_Init 1 */
 254:Core/Src/main.c **** 
 255:Core/Src/main.c ****   /* USER CODE END USART1_Init 1 */
 256:Core/Src/main.c ****   huart1.Instance = USART1;
 257:Core/Src/main.c ****   huart1.Init.BaudRate = 115200;
 258:Core/Src/main.c ****   huart1.Init.WordLength = UART_WORDLENGTH_8B;
 259:Core/Src/main.c ****   huart1.Init.StopBits = UART_STOPBITS_1;
 260:Core/Src/main.c ****   huart1.Init.Parity = UART_PARITY_NONE;
ARM GAS  C:\Users\master\AppData\Local\Temp\cc7WFC3d.s 			page 6


 261:Core/Src/main.c ****   huart1.Init.Mode = UART_MODE_TX_RX;
 262:Core/Src/main.c ****   huart1.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 263:Core/Src/main.c ****   huart1.Init.OverSampling = UART_OVERSAMPLING_16;
 264:Core/Src/main.c ****   if (HAL_UART_Init(&huart1) != HAL_OK)
 265:Core/Src/main.c ****   {
 266:Core/Src/main.c ****     Error_Handler();
 267:Core/Src/main.c ****   }
 268:Core/Src/main.c ****   /* USER CODE BEGIN USART1_Init 2 */
 269:Core/Src/main.c **** 
 270:Core/Src/main.c ****   /* USER CODE END USART1_Init 2 */
 271:Core/Src/main.c **** 
 272:Core/Src/main.c **** }
 273:Core/Src/main.c **** 
 274:Core/Src/main.c **** /**
 275:Core/Src/main.c ****   * Enable DMA controller clock
 276:Core/Src/main.c ****   */
 277:Core/Src/main.c **** static void MX_DMA_Init(void)
 278:Core/Src/main.c **** {
 279:Core/Src/main.c **** 
 280:Core/Src/main.c ****   /* DMA controller clock enable */
 281:Core/Src/main.c ****   __HAL_RCC_DMA1_CLK_ENABLE();
 282:Core/Src/main.c **** 
 283:Core/Src/main.c ****   /* DMA interrupt init */
 284:Core/Src/main.c ****   /* DMA1_Channel4_IRQn interrupt configuration */
 285:Core/Src/main.c ****   HAL_NVIC_SetPriority(DMA1_Channel4_IRQn, 0, 0);
 286:Core/Src/main.c ****   HAL_NVIC_EnableIRQ(DMA1_Channel4_IRQn);
 287:Core/Src/main.c **** 
 288:Core/Src/main.c **** }
 289:Core/Src/main.c **** 
 290:Core/Src/main.c **** /**
 291:Core/Src/main.c ****   * @brief GPIO Initialization Function
 292:Core/Src/main.c ****   * @param None
 293:Core/Src/main.c ****   * @retval None
 294:Core/Src/main.c ****   */
 295:Core/Src/main.c **** static void MX_GPIO_Init(void)
 296:Core/Src/main.c **** {
  27              		.loc 1 296 0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 32
  30              		@ frame_needed = 0, uses_anonymous_args = 0
  31 0000 30B5     		push	{r4, r5, lr}
  32              	.LCFI0:
  33              		.cfi_def_cfa_offset 12
  34              		.cfi_offset 4, -12
  35              		.cfi_offset 5, -8
  36              		.cfi_offset 14, -4
  37 0002 89B0     		sub	sp, sp, #36
  38              	.LCFI1:
  39              		.cfi_def_cfa_offset 48
 297:Core/Src/main.c ****   GPIO_InitTypeDef GPIO_InitStruct = {0};
  40              		.loc 1 297 0
  41 0004 0024     		movs	r4, #0
  42 0006 0494     		str	r4, [sp, #16]
  43 0008 0594     		str	r4, [sp, #20]
  44 000a 0694     		str	r4, [sp, #24]
  45 000c 0794     		str	r4, [sp, #28]
  46              	.LBB4:
ARM GAS  C:\Users\master\AppData\Local\Temp\cc7WFC3d.s 			page 7


 298:Core/Src/main.c **** 
 299:Core/Src/main.c ****   /* GPIO Ports Clock Enable */
 300:Core/Src/main.c ****   __HAL_RCC_GPIOD_CLK_ENABLE();
  47              		.loc 1 300 0
  48 000e 184B     		ldr	r3, .L3
  49 0010 9A69     		ldr	r2, [r3, #24]
  50 0012 42F02002 		orr	r2, r2, #32
  51 0016 9A61     		str	r2, [r3, #24]
  52 0018 9A69     		ldr	r2, [r3, #24]
  53 001a 02F02002 		and	r2, r2, #32
  54 001e 0192     		str	r2, [sp, #4]
  55 0020 019A     		ldr	r2, [sp, #4]
  56              	.LBE4:
  57              	.LBB5:
 301:Core/Src/main.c ****   __HAL_RCC_GPIOB_CLK_ENABLE();
  58              		.loc 1 301 0
  59 0022 9A69     		ldr	r2, [r3, #24]
  60 0024 42F00802 		orr	r2, r2, #8
  61 0028 9A61     		str	r2, [r3, #24]
  62 002a 9A69     		ldr	r2, [r3, #24]
  63 002c 02F00802 		and	r2, r2, #8
  64 0030 0292     		str	r2, [sp, #8]
  65 0032 029A     		ldr	r2, [sp, #8]
  66              	.LBE5:
  67              	.LBB6:
 302:Core/Src/main.c ****   __HAL_RCC_GPIOA_CLK_ENABLE();
  68              		.loc 1 302 0
  69 0034 9A69     		ldr	r2, [r3, #24]
  70 0036 42F00402 		orr	r2, r2, #4
  71 003a 9A61     		str	r2, [r3, #24]
  72 003c 9B69     		ldr	r3, [r3, #24]
  73 003e 03F00403 		and	r3, r3, #4
  74 0042 0393     		str	r3, [sp, #12]
  75 0044 039B     		ldr	r3, [sp, #12]
  76              	.LBE6:
 303:Core/Src/main.c **** 
 304:Core/Src/main.c ****   /*Configure GPIO pin Output Level */
 305:Core/Src/main.c ****   HAL_GPIO_WritePin(GPIOB, GPIO_PIN_12, GPIO_PIN_RESET);
  77              		.loc 1 305 0
  78 0046 0B4D     		ldr	r5, .L3+4
  79 0048 2246     		mov	r2, r4
  80 004a 4FF48051 		mov	r1, #4096
  81 004e 2846     		mov	r0, r5
  82 0050 FFF7FEFF 		bl	HAL_GPIO_WritePin
  83              	.LVL0:
 306:Core/Src/main.c **** 
 307:Core/Src/main.c ****   /*Configure GPIO pin : PB12 */
 308:Core/Src/main.c ****   GPIO_InitStruct.Pin = GPIO_PIN_12;
  84              		.loc 1 308 0
  85 0054 4FF48053 		mov	r3, #4096
  86 0058 0493     		str	r3, [sp, #16]
 309:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
  87              		.loc 1 309 0
  88 005a 0123     		movs	r3, #1
  89 005c 0593     		str	r3, [sp, #20]
 310:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
  90              		.loc 1 310 0
ARM GAS  C:\Users\master\AppData\Local\Temp\cc7WFC3d.s 			page 8


  91 005e 0694     		str	r4, [sp, #24]
 311:Core/Src/main.c ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
  92              		.loc 1 311 0
  93 0060 0223     		movs	r3, #2
  94 0062 0793     		str	r3, [sp, #28]
 312:Core/Src/main.c ****   HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
  95              		.loc 1 312 0
  96 0064 04A9     		add	r1, sp, #16
  97 0066 2846     		mov	r0, r5
  98 0068 FFF7FEFF 		bl	HAL_GPIO_Init
  99              	.LVL1:
 313:Core/Src/main.c **** 
 314:Core/Src/main.c **** }
 100              		.loc 1 314 0
 101 006c 09B0     		add	sp, sp, #36
 102              	.LCFI2:
 103              		.cfi_def_cfa_offset 12
 104              		@ sp needed
 105 006e 30BD     		pop	{r4, r5, pc}
 106              	.L4:
 107              		.align	2
 108              	.L3:
 109 0070 00100240 		.word	1073876992
 110 0074 000C0140 		.word	1073810432
 111              		.cfi_endproc
 112              	.LFE72:
 114              		.section	.text.MX_DMA_Init,"ax",%progbits
 115              		.align	2
 116              		.thumb
 117              		.thumb_func
 119              	MX_DMA_Init:
 120              	.LFB71:
 278:Core/Src/main.c **** 
 121              		.loc 1 278 0
 122              		.cfi_startproc
 123              		@ args = 0, pretend = 0, frame = 8
 124              		@ frame_needed = 0, uses_anonymous_args = 0
 125 0000 00B5     		push	{lr}
 126              	.LCFI3:
 127              		.cfi_def_cfa_offset 4
 128              		.cfi_offset 14, -4
 129 0002 83B0     		sub	sp, sp, #12
 130              	.LCFI4:
 131              		.cfi_def_cfa_offset 16
 132              	.LBB7:
 281:Core/Src/main.c **** 
 133              		.loc 1 281 0
 134 0004 0A4B     		ldr	r3, .L7
 135 0006 5A69     		ldr	r2, [r3, #20]
 136 0008 42F00102 		orr	r2, r2, #1
 137 000c 5A61     		str	r2, [r3, #20]
 138 000e 5B69     		ldr	r3, [r3, #20]
 139 0010 03F00103 		and	r3, r3, #1
 140 0014 0193     		str	r3, [sp, #4]
 141 0016 019B     		ldr	r3, [sp, #4]
 142              	.LBE7:
 285:Core/Src/main.c ****   HAL_NVIC_EnableIRQ(DMA1_Channel4_IRQn);
ARM GAS  C:\Users\master\AppData\Local\Temp\cc7WFC3d.s 			page 9


 143              		.loc 1 285 0
 144 0018 0022     		movs	r2, #0
 145 001a 1146     		mov	r1, r2
 146 001c 0E20     		movs	r0, #14
 147 001e FFF7FEFF 		bl	HAL_NVIC_SetPriority
 148              	.LVL2:
 286:Core/Src/main.c **** 
 149              		.loc 1 286 0
 150 0022 0E20     		movs	r0, #14
 151 0024 FFF7FEFF 		bl	HAL_NVIC_EnableIRQ
 152              	.LVL3:
 288:Core/Src/main.c **** 
 153              		.loc 1 288 0
 154 0028 03B0     		add	sp, sp, #12
 155              	.LCFI5:
 156              		.cfi_def_cfa_offset 4
 157              		@ sp needed
 158 002a 5DF804FB 		ldr	pc, [sp], #4
 159              	.L8:
 160 002e 00BF     		.align	2
 161              	.L7:
 162 0030 00100240 		.word	1073876992
 163              		.cfi_endproc
 164              	.LFE71:
 166              		.section	.text.Error_Handler,"ax",%progbits
 167              		.align	2
 168              		.global	Error_Handler
 169              		.thumb
 170              		.thumb_func
 172              	Error_Handler:
 173              	.LFB73:
 315:Core/Src/main.c **** 
 316:Core/Src/main.c **** /* USER CODE BEGIN 4 */
 317:Core/Src/main.c **** 
 318:Core/Src/main.c **** /* USER CODE END 4 */
 319:Core/Src/main.c **** 
 320:Core/Src/main.c **** /**
 321:Core/Src/main.c ****   * @brief  This function is executed in case of error occurrence.
 322:Core/Src/main.c ****   * @retval None
 323:Core/Src/main.c ****   */
 324:Core/Src/main.c **** void Error_Handler(void)
 325:Core/Src/main.c **** {
 174              		.loc 1 325 0
 175              		.cfi_startproc
 176              		@ Volatile: function does not return.
 177              		@ args = 0, pretend = 0, frame = 0
 178              		@ frame_needed = 0, uses_anonymous_args = 0
 179 0000 08B5     		push	{r3, lr}
 180              	.LCFI6:
 181              		.cfi_def_cfa_offset 8
 182              		.cfi_offset 3, -8
 183              		.cfi_offset 14, -4
 184              	.LBB8:
 185              	.LBB9:
 186              		.file 2 "Drivers/CMSIS/Include/cmsis_gcc.h"
   1:Drivers/CMSIS/Include/cmsis_gcc.h **** /**************************************************************************//**
   2:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
ARM GAS  C:\Users\master\AppData\Local\Temp\cc7WFC3d.s 			page 10


   3:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @brief    CMSIS compiler GCC header file
   4:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @version  V5.0.4
   5:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @date     09. April 2018
   6:Drivers/CMSIS/Include/cmsis_gcc.h ****  ******************************************************************************/
   7:Drivers/CMSIS/Include/cmsis_gcc.h **** /*
   8:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Copyright (c) 2009-2018 Arm Limited. All rights reserved.
   9:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  10:Drivers/CMSIS/Include/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  12:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:Drivers/CMSIS/Include/cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:Drivers/CMSIS/Include/cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  16:Drivers/CMSIS/Include/cmsis_gcc.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  18:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:Drivers/CMSIS/Include/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:Drivers/CMSIS/Include/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:Drivers/CMSIS/Include/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:Drivers/CMSIS/Include/cmsis_gcc.h ****  * limitations under the License.
  23:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  24:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  25:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  28:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ignore some GCC warnings */
  29:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
  30:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  34:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Fallback for __has_builtin */
  35:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __has_builtin
  36:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __has_builtin(x) (0)
  37:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  38:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  39:Drivers/CMSIS/Include/cmsis_gcc.h **** /* CMSIS compiler specific defines */
  40:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ASM
  41:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ASM                                  __asm
  42:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  43:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __INLINE
  44:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __INLINE                               inline
  45:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  46:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  47:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_INLINE                        static inline
  48:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  49:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_FORCEINLINE                 
  50:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_FORCEINLINE                   __attribute__((always_inline)) static inline
  51:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif                                           
  52:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __NO_RETURN
  53:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __NO_RETURN                            __attribute__((__noreturn__))
  54:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  55:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __USED
  56:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __USED                                 __attribute__((used))
  57:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  58:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __WEAK
  59:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __WEAK                                 __attribute__((weak))
ARM GAS  C:\Users\master\AppData\Local\Temp\cc7WFC3d.s 			page 11


  60:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  61:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED
  62:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED                               __attribute__((packed, aligned(1)))
  63:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  64:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_STRUCT
  65:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_STRUCT                        struct __attribute__((packed, aligned(1)))
  66:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  67:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_UNION
  68:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_UNION                         union __attribute__((packed, aligned(1)))
  69:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  70:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32        /* deprecated */
  71:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  72:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  73:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  74:Drivers/CMSIS/Include/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  75:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  76:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)                  (((struct T_UINT32 *)(x))->v)
  77:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  78:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_WRITE
  79:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  80:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  81:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  82:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_WRITE { uint16_t v; };
  83:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  84:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_WRITE(addr, val)    (void)((((struct T_UINT16_WRITE *)(void *)(addr))-
  85:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  86:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_READ
  87:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  88:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  89:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  90:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_READ { uint16_t v; };
  91:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  92:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_READ(addr)          (((const struct T_UINT16_READ *)(const void *)(add
  93:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  94:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_WRITE
  95:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  96:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  97:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  98:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_WRITE { uint32_t v; };
  99:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 100:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_WRITE(addr, val)    (void)((((struct T_UINT32_WRITE *)(void *)(addr))-
 101:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 102:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_READ
 103:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
 104:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
 105:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
 106:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_READ { uint32_t v; };
 107:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 108:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_READ(addr)          (((const struct T_UINT32_READ *)(const void *)(add
 109:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 110:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ALIGNED
 111:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ALIGNED(x)                           __attribute__((aligned(x)))
 112:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 113:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __RESTRICT
 114:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __RESTRICT                             __restrict
 115:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 116:Drivers/CMSIS/Include/cmsis_gcc.h **** 
ARM GAS  C:\Users\master\AppData\Local\Temp\cc7WFC3d.s 			page 12


 117:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 118:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
 119:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
 120:Drivers/CMSIS/Include/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
 121:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 122:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 123:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 124:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 125:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
 126:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing the I-bit in the CPSR.
 127:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 128:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 129:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_irq(void)
 130:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 131:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
 132:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 133:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 134:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 135:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 136:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
 137:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting the I-bit in the CPSR.
 138:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 139:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 140:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_irq(void)
 141:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 142:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
 187              		.loc 2 142 0
 188              		.syntax unified
 189              	@ 142 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 190 0002 72B6     		cpsid i
 191              	@ 0 "" 2
 192              		.thumb
 193              		.syntax unified
 194              	.L10:
 195              	.LBE9:
 196              	.LBE8:
 326:Core/Src/main.c ****   /* USER CODE BEGIN Error_Handler_Debug */
 327:Core/Src/main.c ****   /* User can add his own implementation to report the HAL error return state */
 328:Core/Src/main.c ****   __disable_irq();
 329:Core/Src/main.c ****   while (1)
 330:Core/Src/main.c ****   {
 331:Core/Src/main.c ****          HAL_GPIO_WritePin(GPIOB, GPIO_PIN_12, GPIO_PIN_SET);
 197              		.loc 1 331 0 discriminator 1
 198 0004 0122     		movs	r2, #1
 199 0006 4FF48051 		mov	r1, #4096
 200 000a 0248     		ldr	r0, .L12
 201 000c FFF7FEFF 		bl	HAL_GPIO_WritePin
 202              	.LVL4:
 203 0010 F8E7     		b	.L10
 204              	.L13:
 205 0012 00BF     		.align	2
 206              	.L12:
 207 0014 000C0140 		.word	1073810432
 208              		.cfi_endproc
 209              	.LFE73:
 211              		.section	.text.MX_I2C1_Init,"ax",%progbits
 212              		.align	2
ARM GAS  C:\Users\master\AppData\Local\Temp\cc7WFC3d.s 			page 13


 213              		.thumb
 214              		.thumb_func
 216              	MX_I2C1_Init:
 217              	.LFB68:
 168:Core/Src/main.c **** 
 218              		.loc 1 168 0
 219              		.cfi_startproc
 220              		@ args = 0, pretend = 0, frame = 0
 221              		@ frame_needed = 0, uses_anonymous_args = 0
 222 0000 08B5     		push	{r3, lr}
 223              	.LCFI7:
 224              		.cfi_def_cfa_offset 8
 225              		.cfi_offset 3, -8
 226              		.cfi_offset 14, -4
 177:Core/Src/main.c ****   hi2c1.Init.ClockSpeed = 400000;
 227              		.loc 1 177 0
 228 0002 0A48     		ldr	r0, .L17
 229 0004 0A4B     		ldr	r3, .L17+4
 230 0006 0360     		str	r3, [r0]
 178:Core/Src/main.c ****   hi2c1.Init.DutyCycle = I2C_DUTYCYCLE_2;
 231              		.loc 1 178 0
 232 0008 0A4B     		ldr	r3, .L17+8
 233 000a 4360     		str	r3, [r0, #4]
 179:Core/Src/main.c ****   hi2c1.Init.OwnAddress1 = 0;
 234              		.loc 1 179 0
 235 000c 0023     		movs	r3, #0
 236 000e 8360     		str	r3, [r0, #8]
 180:Core/Src/main.c ****   hi2c1.Init.AddressingMode = I2C_ADDRESSINGMODE_7BIT;
 237              		.loc 1 180 0
 238 0010 C360     		str	r3, [r0, #12]
 181:Core/Src/main.c ****   hi2c1.Init.DualAddressMode = I2C_DUALADDRESS_DISABLE;
 239              		.loc 1 181 0
 240 0012 4FF48042 		mov	r2, #16384
 241 0016 0261     		str	r2, [r0, #16]
 182:Core/Src/main.c ****   hi2c1.Init.OwnAddress2 = 0;
 242              		.loc 1 182 0
 243 0018 4361     		str	r3, [r0, #20]
 183:Core/Src/main.c ****   hi2c1.Init.GeneralCallMode = I2C_GENERALCALL_DISABLE;
 244              		.loc 1 183 0
 245 001a 8361     		str	r3, [r0, #24]
 184:Core/Src/main.c ****   hi2c1.Init.NoStretchMode = I2C_NOSTRETCH_DISABLE;
 246              		.loc 1 184 0
 247 001c C361     		str	r3, [r0, #28]
 185:Core/Src/main.c ****   if (HAL_I2C_Init(&hi2c1) != HAL_OK)
 248              		.loc 1 185 0
 249 001e 0362     		str	r3, [r0, #32]
 186:Core/Src/main.c ****   {
 250              		.loc 1 186 0
 251 0020 FFF7FEFF 		bl	HAL_I2C_Init
 252              	.LVL5:
 253 0024 08B1     		cbz	r0, .L14
 188:Core/Src/main.c ****   }
 254              		.loc 1 188 0
 255 0026 FFF7FEFF 		bl	Error_Handler
 256              	.LVL6:
 257              	.L14:
 258 002a 08BD     		pop	{r3, pc}
ARM GAS  C:\Users\master\AppData\Local\Temp\cc7WFC3d.s 			page 14


 259              	.L18:
 260              		.align	2
 261              	.L17:
 262 002c 00000000 		.word	hi2c1
 263 0030 00540040 		.word	1073763328
 264 0034 801A0600 		.word	400000
 265              		.cfi_endproc
 266              	.LFE68:
 268              		.section	.text.MX_TIM2_Init,"ax",%progbits
 269              		.align	2
 270              		.thumb
 271              		.thumb_func
 273              	MX_TIM2_Init:
 274              	.LFB69:
 202:Core/Src/main.c **** 
 275              		.loc 1 202 0
 276              		.cfi_startproc
 277              		@ args = 0, pretend = 0, frame = 24
 278              		@ frame_needed = 0, uses_anonymous_args = 0
 279 0000 00B5     		push	{lr}
 280              	.LCFI8:
 281              		.cfi_def_cfa_offset 4
 282              		.cfi_offset 14, -4
 283 0002 87B0     		sub	sp, sp, #28
 284              	.LCFI9:
 285              		.cfi_def_cfa_offset 32
 208:Core/Src/main.c ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 286              		.loc 1 208 0
 287 0004 0023     		movs	r3, #0
 288 0006 0293     		str	r3, [sp, #8]
 289 0008 0393     		str	r3, [sp, #12]
 290 000a 0493     		str	r3, [sp, #16]
 291 000c 0593     		str	r3, [sp, #20]
 209:Core/Src/main.c **** 
 292              		.loc 1 209 0
 293 000e 0093     		str	r3, [sp]
 294 0010 0193     		str	r3, [sp, #4]
 214:Core/Src/main.c ****   htim2.Init.Prescaler = 7199;
 295              		.loc 1 214 0
 296 0012 1548     		ldr	r0, .L24
 297 0014 4FF08042 		mov	r2, #1073741824
 298 0018 0260     		str	r2, [r0]
 215:Core/Src/main.c ****   htim2.Init.CounterMode = TIM_COUNTERMODE_UP;
 299              		.loc 1 215 0
 300 001a 41F61F42 		movw	r2, #7199
 301 001e 4260     		str	r2, [r0, #4]
 216:Core/Src/main.c ****   htim2.Init.Period = 4999;
 302              		.loc 1 216 0
 303 0020 8360     		str	r3, [r0, #8]
 217:Core/Src/main.c ****   htim2.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 304              		.loc 1 217 0
 305 0022 41F28732 		movw	r2, #4999
 306 0026 C260     		str	r2, [r0, #12]
 218:Core/Src/main.c ****   htim2.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_ENABLE;
 307              		.loc 1 218 0
 308 0028 0361     		str	r3, [r0, #16]
 219:Core/Src/main.c ****   if (HAL_TIM_Base_Init(&htim2) != HAL_OK)
ARM GAS  C:\Users\master\AppData\Local\Temp\cc7WFC3d.s 			page 15


 309              		.loc 1 219 0
 310 002a 8023     		movs	r3, #128
 311 002c 8361     		str	r3, [r0, #24]
 220:Core/Src/main.c ****   {
 312              		.loc 1 220 0
 313 002e FFF7FEFF 		bl	HAL_TIM_Base_Init
 314              	.LVL7:
 315 0032 08B1     		cbz	r0, .L20
 222:Core/Src/main.c ****   }
 316              		.loc 1 222 0
 317 0034 FFF7FEFF 		bl	Error_Handler
 318              	.LVL8:
 319              	.L20:
 224:Core/Src/main.c ****   if (HAL_TIM_ConfigClockSource(&htim2, &sClockSourceConfig) != HAL_OK)
 320              		.loc 1 224 0
 321 0038 06A9     		add	r1, sp, #24
 322 003a 4FF48053 		mov	r3, #4096
 323 003e 41F8103D 		str	r3, [r1, #-16]!
 225:Core/Src/main.c ****   {
 324              		.loc 1 225 0
 325 0042 0948     		ldr	r0, .L24
 326 0044 FFF7FEFF 		bl	HAL_TIM_ConfigClockSource
 327              	.LVL9:
 328 0048 08B1     		cbz	r0, .L21
 227:Core/Src/main.c ****   }
 329              		.loc 1 227 0
 330 004a FFF7FEFF 		bl	Error_Handler
 331              	.LVL10:
 332              	.L21:
 229:Core/Src/main.c ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 333              		.loc 1 229 0
 334 004e 0023     		movs	r3, #0
 335 0050 0093     		str	r3, [sp]
 230:Core/Src/main.c ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim2, &sMasterConfig) != HAL_OK)
 336              		.loc 1 230 0
 337 0052 0193     		str	r3, [sp, #4]
 231:Core/Src/main.c ****   {
 338              		.loc 1 231 0
 339 0054 6946     		mov	r1, sp
 340 0056 0448     		ldr	r0, .L24
 341 0058 FFF7FEFF 		bl	HAL_TIMEx_MasterConfigSynchronization
 342              	.LVL11:
 343 005c 08B1     		cbz	r0, .L19
 233:Core/Src/main.c ****   }
 344              		.loc 1 233 0
 345 005e FFF7FEFF 		bl	Error_Handler
 346              	.LVL12:
 347              	.L19:
 239:Core/Src/main.c **** 
 348              		.loc 1 239 0
 349 0062 07B0     		add	sp, sp, #28
 350              	.LCFI10:
 351              		.cfi_def_cfa_offset 4
 352              		@ sp needed
 353 0064 5DF804FB 		ldr	pc, [sp], #4
 354              	.L25:
 355              		.align	2
ARM GAS  C:\Users\master\AppData\Local\Temp\cc7WFC3d.s 			page 16


 356              	.L24:
 357 0068 00000000 		.word	htim2
 358              		.cfi_endproc
 359              	.LFE69:
 361              		.section	.text.MX_USART1_UART_Init,"ax",%progbits
 362              		.align	2
 363              		.thumb
 364              		.thumb_func
 366              	MX_USART1_UART_Init:
 367              	.LFB70:
 247:Core/Src/main.c **** 
 368              		.loc 1 247 0
 369              		.cfi_startproc
 370              		@ args = 0, pretend = 0, frame = 0
 371              		@ frame_needed = 0, uses_anonymous_args = 0
 372 0000 08B5     		push	{r3, lr}
 373              	.LCFI11:
 374              		.cfi_def_cfa_offset 8
 375              		.cfi_offset 3, -8
 376              		.cfi_offset 14, -4
 256:Core/Src/main.c ****   huart1.Init.BaudRate = 115200;
 377              		.loc 1 256 0
 378 0002 0A48     		ldr	r0, .L29
 379 0004 0A4B     		ldr	r3, .L29+4
 380 0006 0360     		str	r3, [r0]
 257:Core/Src/main.c ****   huart1.Init.WordLength = UART_WORDLENGTH_8B;
 381              		.loc 1 257 0
 382 0008 4FF4E133 		mov	r3, #115200
 383 000c 4360     		str	r3, [r0, #4]
 258:Core/Src/main.c ****   huart1.Init.StopBits = UART_STOPBITS_1;
 384              		.loc 1 258 0
 385 000e 0023     		movs	r3, #0
 386 0010 8360     		str	r3, [r0, #8]
 259:Core/Src/main.c ****   huart1.Init.Parity = UART_PARITY_NONE;
 387              		.loc 1 259 0
 388 0012 C360     		str	r3, [r0, #12]
 260:Core/Src/main.c ****   huart1.Init.Mode = UART_MODE_TX_RX;
 389              		.loc 1 260 0
 390 0014 0361     		str	r3, [r0, #16]
 261:Core/Src/main.c ****   huart1.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 391              		.loc 1 261 0
 392 0016 0C22     		movs	r2, #12
 393 0018 4261     		str	r2, [r0, #20]
 262:Core/Src/main.c ****   huart1.Init.OverSampling = UART_OVERSAMPLING_16;
 394              		.loc 1 262 0
 395 001a 8361     		str	r3, [r0, #24]
 263:Core/Src/main.c ****   if (HAL_UART_Init(&huart1) != HAL_OK)
 396              		.loc 1 263 0
 397 001c C361     		str	r3, [r0, #28]
 264:Core/Src/main.c ****   {
 398              		.loc 1 264 0
 399 001e FFF7FEFF 		bl	HAL_UART_Init
 400              	.LVL13:
 401 0022 08B1     		cbz	r0, .L26
 266:Core/Src/main.c ****   }
 402              		.loc 1 266 0
 403 0024 FFF7FEFF 		bl	Error_Handler
ARM GAS  C:\Users\master\AppData\Local\Temp\cc7WFC3d.s 			page 17


 404              	.LVL14:
 405              	.L26:
 406 0028 08BD     		pop	{r3, pc}
 407              	.L30:
 408 002a 00BF     		.align	2
 409              	.L29:
 410 002c 00000000 		.word	huart1
 411 0030 00380140 		.word	1073821696
 412              		.cfi_endproc
 413              	.LFE70:
 415              		.section	.text.SystemClock_Config,"ax",%progbits
 416              		.align	2
 417              		.global	SystemClock_Config
 418              		.thumb
 419              		.thumb_func
 421              	SystemClock_Config:
 422              	.LFB67:
 129:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 423              		.loc 1 129 0
 424              		.cfi_startproc
 425              		@ args = 0, pretend = 0, frame = 64
 426              		@ frame_needed = 0, uses_anonymous_args = 0
 427 0000 00B5     		push	{lr}
 428              	.LCFI12:
 429              		.cfi_def_cfa_offset 4
 430              		.cfi_offset 14, -4
 431 0002 91B0     		sub	sp, sp, #68
 432              	.LCFI13:
 433              		.cfi_def_cfa_offset 72
 130:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 434              		.loc 1 130 0
 435 0004 2822     		movs	r2, #40
 436 0006 0021     		movs	r1, #0
 437 0008 06A8     		add	r0, sp, #24
 438 000a FFF7FEFF 		bl	memset
 439              	.LVL15:
 131:Core/Src/main.c **** 
 440              		.loc 1 131 0
 441 000e 0023     		movs	r3, #0
 442 0010 0193     		str	r3, [sp, #4]
 443 0012 0293     		str	r3, [sp, #8]
 444 0014 0393     		str	r3, [sp, #12]
 445 0016 0493     		str	r3, [sp, #16]
 446 0018 0593     		str	r3, [sp, #20]
 136:Core/Src/main.c ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 447              		.loc 1 136 0
 448 001a 0122     		movs	r2, #1
 449 001c 0692     		str	r2, [sp, #24]
 137:Core/Src/main.c ****   RCC_OscInitStruct.HSEPredivValue = RCC_HSE_PREDIV_DIV1;
 450              		.loc 1 137 0
 451 001e 4FF48033 		mov	r3, #65536
 452 0022 0793     		str	r3, [sp, #28]
 139:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 453              		.loc 1 139 0
 454 0024 0A92     		str	r2, [sp, #40]
 140:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 455              		.loc 1 140 0
ARM GAS  C:\Users\master\AppData\Local\Temp\cc7WFC3d.s 			page 18


 456 0026 0222     		movs	r2, #2
 457 0028 0D92     		str	r2, [sp, #52]
 141:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLMUL = RCC_PLL_MUL9;
 458              		.loc 1 141 0
 459 002a 0E93     		str	r3, [sp, #56]
 142:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 460              		.loc 1 142 0
 461 002c 4FF4E013 		mov	r3, #1835008
 462 0030 0F93     		str	r3, [sp, #60]
 143:Core/Src/main.c ****   {
 463              		.loc 1 143 0
 464 0032 06A8     		add	r0, sp, #24
 465 0034 FFF7FEFF 		bl	HAL_RCC_OscConfig
 466              	.LVL16:
 467 0038 08B1     		cbz	r0, .L32
 145:Core/Src/main.c ****   }
 468              		.loc 1 145 0
 469 003a FFF7FEFF 		bl	Error_Handler
 470              	.LVL17:
 471              	.L32:
 149:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 472              		.loc 1 149 0
 473 003e 0F23     		movs	r3, #15
 474 0040 0193     		str	r3, [sp, #4]
 151:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 475              		.loc 1 151 0
 476 0042 0221     		movs	r1, #2
 477 0044 0291     		str	r1, [sp, #8]
 152:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 478              		.loc 1 152 0
 479 0046 0023     		movs	r3, #0
 480 0048 0393     		str	r3, [sp, #12]
 153:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 481              		.loc 1 153 0
 482 004a 4FF48062 		mov	r2, #1024
 483 004e 0492     		str	r2, [sp, #16]
 154:Core/Src/main.c **** 
 484              		.loc 1 154 0
 485 0050 0593     		str	r3, [sp, #20]
 156:Core/Src/main.c ****   {
 486              		.loc 1 156 0
 487 0052 01A8     		add	r0, sp, #4
 488 0054 FFF7FEFF 		bl	HAL_RCC_ClockConfig
 489              	.LVL18:
 490 0058 08B1     		cbz	r0, .L31
 158:Core/Src/main.c ****   }
 491              		.loc 1 158 0
 492 005a FFF7FEFF 		bl	Error_Handler
 493              	.LVL19:
 494              	.L31:
 160:Core/Src/main.c **** 
 495              		.loc 1 160 0
 496 005e 11B0     		add	sp, sp, #68
 497              	.LCFI14:
 498              		.cfi_def_cfa_offset 4
 499              		@ sp needed
 500 0060 5DF804FB 		ldr	pc, [sp], #4
ARM GAS  C:\Users\master\AppData\Local\Temp\cc7WFC3d.s 			page 19


 501              		.cfi_endproc
 502              	.LFE67:
 504              		.section	.text.main,"ax",%progbits
 505              		.align	2
 506              		.global	main
 507              		.thumb
 508              		.thumb_func
 510              	main:
 511              	.LFB66:
  77:Core/Src/main.c ****   /* USER CODE BEGIN 1 */
 512              		.loc 1 77 0
 513              		.cfi_startproc
 514              		@ Volatile: function does not return.
 515              		@ args = 0, pretend = 0, frame = 0
 516              		@ frame_needed = 0, uses_anonymous_args = 0
 517 0000 08B5     		push	{r3, lr}
 518              	.LCFI15:
 519              		.cfi_def_cfa_offset 8
 520              		.cfi_offset 3, -8
 521              		.cfi_offset 14, -4
  85:Core/Src/main.c **** 
 522              		.loc 1 85 0
 523 0002 FFF7FEFF 		bl	HAL_Init
 524              	.LVL20:
  92:Core/Src/main.c **** 
 525              		.loc 1 92 0
 526 0006 FFF7FEFF 		bl	SystemClock_Config
 527              	.LVL21:
  99:Core/Src/main.c ****   MX_I2C1_Init();
 528              		.loc 1 99 0
 529 000a FFF7FEFF 		bl	MX_GPIO_Init
 530              	.LVL22:
 100:Core/Src/main.c ****   MX_TIM2_Init();
 531              		.loc 1 100 0
 532 000e FFF7FEFF 		bl	MX_I2C1_Init
 533              	.LVL23:
 101:Core/Src/main.c ****   MX_DMA_Init();
 534              		.loc 1 101 0
 535 0012 FFF7FEFF 		bl	MX_TIM2_Init
 536              	.LVL24:
 102:Core/Src/main.c ****   MX_USART1_UART_Init();
 537              		.loc 1 102 0
 538 0016 FFF7FEFF 		bl	MX_DMA_Init
 539              	.LVL25:
 103:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 540              		.loc 1 103 0
 541 001a FFF7FEFF 		bl	MX_USART1_UART_Init
 542              	.LVL26:
 118:Core/Src/main.c ****    while(1){}
 543              		.loc 1 118 0
 544 001e FFF7FEFF 		bl	mysetp
 545              	.LVL27:
 546              	.L36:
 547 0022 FEE7     		b	.L36
 548              		.cfi_endproc
 549              	.LFE66:
 551              		.comm	hdma_usart1_tx,68,4
ARM GAS  C:\Users\master\AppData\Local\Temp\cc7WFC3d.s 			page 20


 552              		.comm	huart1,68,4
 553              		.comm	htim2,72,4
 554              		.comm	hi2c1,84,4
 555              		.text
 556              	.Letext0:
 557              		.file 3 "c:\\program files (x86)\\gnu tools arm embedded\\5.4 2016q3\\arm-none-eabi\\include\\mach
 558              		.file 4 "c:\\program files (x86)\\gnu tools arm embedded\\5.4 2016q3\\arm-none-eabi\\include\\sys\
 559              		.file 5 "Drivers/CMSIS/Device/ST/STM32F1xx/Include/stm32f103xb.h"
 560              		.file 6 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_def.h"
 561              		.file 7 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_rcc.h"
 562              		.file 8 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_rcc_ex.h"
 563              		.file 9 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_gpio.h"
 564              		.file 10 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_dma.h"
 565              		.file 11 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_i2c.h"
 566              		.file 12 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_tim.h"
 567              		.file 13 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_uart.h"
 568              		.file 14 "Drivers/CMSIS/Include/core_cm3.h"
 569              		.file 15 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_cortex.h"
 570              		.file 16 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_tim_ex.h"
 571              		.file 17 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal.h"
 572              		.file 18 "Core/Inc/mysetp.h"
ARM GAS  C:\Users\master\AppData\Local\Temp\cc7WFC3d.s 			page 21


DEFINED SYMBOLS
                            *ABS*:00000000 main.c
C:\Users\master\AppData\Local\Temp\cc7WFC3d.s:20     .text.MX_GPIO_Init:00000000 $t
C:\Users\master\AppData\Local\Temp\cc7WFC3d.s:24     .text.MX_GPIO_Init:00000000 MX_GPIO_Init
C:\Users\master\AppData\Local\Temp\cc7WFC3d.s:109    .text.MX_GPIO_Init:00000070 $d
C:\Users\master\AppData\Local\Temp\cc7WFC3d.s:115    .text.MX_DMA_Init:00000000 $t
C:\Users\master\AppData\Local\Temp\cc7WFC3d.s:119    .text.MX_DMA_Init:00000000 MX_DMA_Init
C:\Users\master\AppData\Local\Temp\cc7WFC3d.s:162    .text.MX_DMA_Init:00000030 $d
C:\Users\master\AppData\Local\Temp\cc7WFC3d.s:167    .text.Error_Handler:00000000 $t
C:\Users\master\AppData\Local\Temp\cc7WFC3d.s:172    .text.Error_Handler:00000000 Error_Handler
C:\Users\master\AppData\Local\Temp\cc7WFC3d.s:207    .text.Error_Handler:00000014 $d
C:\Users\master\AppData\Local\Temp\cc7WFC3d.s:212    .text.MX_I2C1_Init:00000000 $t
C:\Users\master\AppData\Local\Temp\cc7WFC3d.s:216    .text.MX_I2C1_Init:00000000 MX_I2C1_Init
C:\Users\master\AppData\Local\Temp\cc7WFC3d.s:262    .text.MX_I2C1_Init:0000002c $d
                            *COM*:00000054 hi2c1
C:\Users\master\AppData\Local\Temp\cc7WFC3d.s:269    .text.MX_TIM2_Init:00000000 $t
C:\Users\master\AppData\Local\Temp\cc7WFC3d.s:273    .text.MX_TIM2_Init:00000000 MX_TIM2_Init
C:\Users\master\AppData\Local\Temp\cc7WFC3d.s:357    .text.MX_TIM2_Init:00000068 $d
                            *COM*:00000048 htim2
C:\Users\master\AppData\Local\Temp\cc7WFC3d.s:362    .text.MX_USART1_UART_Init:00000000 $t
C:\Users\master\AppData\Local\Temp\cc7WFC3d.s:366    .text.MX_USART1_UART_Init:00000000 MX_USART1_UART_Init
C:\Users\master\AppData\Local\Temp\cc7WFC3d.s:410    .text.MX_USART1_UART_Init:0000002c $d
                            *COM*:00000044 huart1
C:\Users\master\AppData\Local\Temp\cc7WFC3d.s:416    .text.SystemClock_Config:00000000 $t
C:\Users\master\AppData\Local\Temp\cc7WFC3d.s:421    .text.SystemClock_Config:00000000 SystemClock_Config
C:\Users\master\AppData\Local\Temp\cc7WFC3d.s:505    .text.main:00000000 $t
C:\Users\master\AppData\Local\Temp\cc7WFC3d.s:510    .text.main:00000000 main
                            *COM*:00000044 hdma_usart1_tx
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
HAL_GPIO_WritePin
HAL_GPIO_Init
HAL_NVIC_SetPriority
HAL_NVIC_EnableIRQ
HAL_I2C_Init
HAL_TIM_Base_Init
HAL_TIM_ConfigClockSource
HAL_TIMEx_MasterConfigSynchronization
HAL_UART_Init
memset
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
HAL_Init
mysetp
