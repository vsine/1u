ARM GAS  C:\Users\master\AppData\Local\Temp\ccP233NP.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"u8x8_message.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.u8x8_draw_button_line,"ax",%progbits
  20              		.align	2
  21              		.global	u8x8_draw_button_line
  22              		.thumb
  23              		.thumb_func
  25              	u8x8_draw_button_line:
  26              	.LFB0:
  27              		.file 1 "u8g2_lib/u8x8_message.c"
   1:u8g2_lib/u8x8_message.c **** /*
   2:u8g2_lib/u8x8_message.c **** 
   3:u8g2_lib/u8x8_message.c ****   u8x8_message.c
   4:u8g2_lib/u8x8_message.c ****   
   5:u8g2_lib/u8x8_message.c ****   Universal 8bit Graphics Library (https://github.com/olikraus/u8g2/)
   6:u8g2_lib/u8x8_message.c **** 
   7:u8g2_lib/u8x8_message.c ****   Copyright (c) 2016, olikraus@gmail.com
   8:u8g2_lib/u8x8_message.c ****   All rights reserved.
   9:u8g2_lib/u8x8_message.c **** 
  10:u8g2_lib/u8x8_message.c ****   Redistribution and use in source and binary forms, with or without modification, 
  11:u8g2_lib/u8x8_message.c ****   are permitted provided that the following conditions are met:
  12:u8g2_lib/u8x8_message.c **** 
  13:u8g2_lib/u8x8_message.c ****   * Redistributions of source code must retain the above copyright notice, this list 
  14:u8g2_lib/u8x8_message.c ****     of conditions and the following disclaimer.
  15:u8g2_lib/u8x8_message.c ****     
  16:u8g2_lib/u8x8_message.c ****   * Redistributions in binary form must reproduce the above copyright notice, this 
  17:u8g2_lib/u8x8_message.c ****     list of conditions and the following disclaimer in the documentation and/or other 
  18:u8g2_lib/u8x8_message.c ****     materials provided with the distribution.
  19:u8g2_lib/u8x8_message.c **** 
  20:u8g2_lib/u8x8_message.c ****   THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND 
  21:u8g2_lib/u8x8_message.c ****   CONTRIBUTORS "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, 
  22:u8g2_lib/u8x8_message.c ****   INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF 
  23:u8g2_lib/u8x8_message.c ****   MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE 
  24:u8g2_lib/u8x8_message.c ****   DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR 
  25:u8g2_lib/u8x8_message.c ****   CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, 
  26:u8g2_lib/u8x8_message.c ****   SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT 
  27:u8g2_lib/u8x8_message.c ****   NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; 
  28:u8g2_lib/u8x8_message.c ****   LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER 
  29:u8g2_lib/u8x8_message.c ****   CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, 
  30:u8g2_lib/u8x8_message.c ****   STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) 
  31:u8g2_lib/u8x8_message.c ****   ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF 
ARM GAS  C:\Users\master\AppData\Local\Temp\ccP233NP.s 			page 2


  32:u8g2_lib/u8x8_message.c ****   ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.  
  33:u8g2_lib/u8x8_message.c ****   
  34:u8g2_lib/u8x8_message.c **** */
  35:u8g2_lib/u8x8_message.c **** 
  36:u8g2_lib/u8x8_message.c **** #include "u8x8.h"
  37:u8g2_lib/u8x8_message.c **** 
  38:u8g2_lib/u8x8_message.c **** uint8_t u8x8_draw_button_line(u8x8_t *u8x8, uint8_t y, uint8_t w, uint8_t cursor, const char *s)
  39:u8g2_lib/u8x8_message.c **** {
  28              		.loc 1 39 0
  29              		.cfi_startproc
  30              		@ args = 4, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              	.LVL0:
  33 0000 2DE9F84F 		push	{r3, r4, r5, r6, r7, r8, r9, r10, fp, lr}
  34              	.LCFI0:
  35              		.cfi_def_cfa_offset 40
  36              		.cfi_offset 3, -40
  37              		.cfi_offset 4, -36
  38              		.cfi_offset 5, -32
  39              		.cfi_offset 6, -28
  40              		.cfi_offset 7, -24
  41              		.cfi_offset 8, -20
  42              		.cfi_offset 9, -16
  43              		.cfi_offset 10, -12
  44              		.cfi_offset 11, -8
  45              		.cfi_offset 14, -4
  46 0004 0646     		mov	r6, r0
  47 0006 8946     		mov	r9, r1
  48 0008 1546     		mov	r5, r2
  49 000a 9A46     		mov	r10, r3
  50 000c DDF82880 		ldr	r8, [sp, #40]
  40:u8g2_lib/u8x8_message.c ****   uint8_t i;
  41:u8g2_lib/u8x8_message.c ****   uint8_t cnt;
  42:u8g2_lib/u8x8_message.c ****   uint8_t total;
  43:u8g2_lib/u8x8_message.c ****   uint8_t d;
  44:u8g2_lib/u8x8_message.c ****   uint8_t x;
  45:u8g2_lib/u8x8_message.c ****   cnt = u8x8_GetStringLineCnt(s);
  51              		.loc 1 45 0
  52 0010 4046     		mov	r0, r8
  53              	.LVL1:
  54 0012 FFF7FEFF 		bl	u8x8_GetStringLineCnt
  55              	.LVL2:
  56 0016 0746     		mov	r7, r0
  57              	.LVL3:
  46:u8g2_lib/u8x8_message.c ****   
  47:u8g2_lib/u8x8_message.c ****   /* calculate the width of the button */
  48:u8g2_lib/u8x8_message.c ****   total = 0;
  58              		.loc 1 48 0
  59 0018 4FF0000B 		mov	fp, #0
  49:u8g2_lib/u8x8_message.c ****   for( i = 0; i < cnt; i++ )
  60              		.loc 1 49 0
  61 001c 5C46     		mov	r4, fp
  62 001e 0CE0     		b	.L2
  63              	.LVL4:
  64              	.L3:
  50:u8g2_lib/u8x8_message.c ****   {
  51:u8g2_lib/u8x8_message.c ****     total += u8x8_GetUTF8Len(u8x8, u8x8_GetStringLineStart(i, s));
ARM GAS  C:\Users\master\AppData\Local\Temp\ccP233NP.s 			page 3


  65              		.loc 1 51 0 discriminator 3
  66 0020 4146     		mov	r1, r8
  67 0022 2046     		mov	r0, r4
  68 0024 FFF7FEFF 		bl	u8x8_GetStringLineStart
  69              	.LVL5:
  70 0028 0146     		mov	r1, r0
  71 002a 3046     		mov	r0, r6
  72 002c FFF7FEFF 		bl	u8x8_GetUTF8Len
  73              	.LVL6:
  74 0030 5844     		add	r0, r0, fp
  75 0032 5FFA80FB 		uxtb	fp, r0
  76              	.LVL7:
  49:u8g2_lib/u8x8_message.c ****   for( i = 0; i < cnt; i++ )
  77              		.loc 1 49 0 discriminator 3
  78 0036 0134     		adds	r4, r4, #1
  79              	.LVL8:
  80 0038 E4B2     		uxtb	r4, r4
  81              	.LVL9:
  82              	.L2:
  49:u8g2_lib/u8x8_message.c ****   for( i = 0; i < cnt; i++ )
  83              		.loc 1 49 0 is_stmt 0 discriminator 1
  84 003a BC42     		cmp	r4, r7
  85 003c F0D3     		bcc	.L3
  52:u8g2_lib/u8x8_message.c ****   }
  53:u8g2_lib/u8x8_message.c ****   total += (cnt-1);	/* had one space between the buttons */
  86              		.loc 1 53 0 is_stmt 1
  87 003e 0BEB0704 		add	r4, fp, r7
  88              	.LVL10:
  89 0042 E4B2     		uxtb	r4, r4
  90 0044 013C     		subs	r4, r4, #1
  91 0046 E4B2     		uxtb	r4, r4
  92              	.LVL11:
  54:u8g2_lib/u8x8_message.c ****   
  55:u8g2_lib/u8x8_message.c ****   /* calculate the left offset */
  56:u8g2_lib/u8x8_message.c ****   d = 0;
  57:u8g2_lib/u8x8_message.c ****   if ( total < w )
  93              		.loc 1 57 0
  94 0048 AC42     		cmp	r4, r5
  95 004a 03D2     		bcs	.L8
  96              	.LVL12:
  58:u8g2_lib/u8x8_message.c ****   {
  59:u8g2_lib/u8x8_message.c ****     d = w;
  60:u8g2_lib/u8x8_message.c ****     d -= total;
  97              		.loc 1 60 0
  98 004c 2C1B     		subs	r4, r5, r4
  99              	.LVL13:
  61:u8g2_lib/u8x8_message.c ****     d /= 2;
 100              		.loc 1 61 0
 101 004e C4F34604 		ubfx	r4, r4, #1, #7
 102              	.LVL14:
 103 0052 00E0     		b	.L4
 104              	.LVL15:
 105              	.L8:
  56:u8g2_lib/u8x8_message.c ****   if ( total < w )
 106              		.loc 1 56 0
 107 0054 0024     		movs	r4, #0
 108              	.LVL16:
ARM GAS  C:\Users\master\AppData\Local\Temp\ccP233NP.s 			page 4


 109              	.L4:
  62:u8g2_lib/u8x8_message.c ****   }
  63:u8g2_lib/u8x8_message.c ****   
  64:u8g2_lib/u8x8_message.c ****   /* draw the buttons */
  65:u8g2_lib/u8x8_message.c ****   x = d;
  66:u8g2_lib/u8x8_message.c ****   u8x8_SetInverseFont(u8x8, 0);
 110              		.loc 1 66 0
 111 0056 0025     		movs	r5, #0
 112 0058 86F82350 		strb	r5, [r6, #35]
 113              	.LVL17:
  67:u8g2_lib/u8x8_message.c ****   for( i = 0; i < cnt; i++ )
 114              		.loc 1 67 0
 115 005c 1DE0     		b	.L5
 116              	.LVL18:
 117              	.L7:
  68:u8g2_lib/u8x8_message.c ****   {
  69:u8g2_lib/u8x8_message.c ****     if ( i == cursor )
 118              		.loc 1 69 0
 119 005e 5545     		cmp	r5, r10
 120 0060 02D1     		bne	.L6
  70:u8g2_lib/u8x8_message.c ****       u8x8_SetInverseFont(u8x8, 1);
 121              		.loc 1 70 0
 122 0062 0123     		movs	r3, #1
 123 0064 86F82330 		strb	r3, [r6, #35]
 124              	.L6:
  71:u8g2_lib/u8x8_message.c ****       
  72:u8g2_lib/u8x8_message.c ****     x+=u8x8_DrawUTF8(u8x8, x, y, u8x8_GetStringLineStart(i, s));
 125              		.loc 1 72 0 discriminator 2
 126 0068 4146     		mov	r1, r8
 127 006a 2846     		mov	r0, r5
 128 006c FFF7FEFF 		bl	u8x8_GetStringLineStart
 129              	.LVL19:
 130 0070 0346     		mov	r3, r0
 131 0072 4A46     		mov	r2, r9
 132 0074 2146     		mov	r1, r4
 133 0076 3046     		mov	r0, r6
 134 0078 FFF7FEFF 		bl	u8x8_DrawUTF8
 135              	.LVL20:
 136 007c 2044     		add	r0, r0, r4
 137 007e C4B2     		uxtb	r4, r0
 138              	.LVL21:
  73:u8g2_lib/u8x8_message.c ****     u8x8_SetInverseFont(u8x8, 0);
 139              		.loc 1 73 0 discriminator 2
 140 0080 0023     		movs	r3, #0
 141 0082 86F82330 		strb	r3, [r6, #35]
  74:u8g2_lib/u8x8_message.c ****     x+=u8x8_DrawUTF8(u8x8, x, y, " ");
 142              		.loc 1 74 0 discriminator 2
 143 0086 074B     		ldr	r3, .L10
 144 0088 4A46     		mov	r2, r9
 145 008a 2146     		mov	r1, r4
 146 008c 3046     		mov	r0, r6
 147 008e FFF7FEFF 		bl	u8x8_DrawUTF8
 148              	.LVL22:
 149 0092 2044     		add	r0, r0, r4
 150 0094 C4B2     		uxtb	r4, r0
 151              	.LVL23:
  67:u8g2_lib/u8x8_message.c ****   {
ARM GAS  C:\Users\master\AppData\Local\Temp\ccP233NP.s 			page 5


 152              		.loc 1 67 0 discriminator 2
 153 0096 0135     		adds	r5, r5, #1
 154              	.LVL24:
 155 0098 EDB2     		uxtb	r5, r5
 156              	.LVL25:
 157              	.L5:
  67:u8g2_lib/u8x8_message.c ****   {
 158              		.loc 1 67 0 is_stmt 0 discriminator 1
 159 009a BD42     		cmp	r5, r7
 160 009c DFD3     		bcc	.L7
  75:u8g2_lib/u8x8_message.c ****   }
  76:u8g2_lib/u8x8_message.c ****   
  77:u8g2_lib/u8x8_message.c ****   /* return the number of buttons */
  78:u8g2_lib/u8x8_message.c ****   return cnt;
  79:u8g2_lib/u8x8_message.c **** }
 161              		.loc 1 79 0 is_stmt 1
 162 009e 3846     		mov	r0, r7
 163 00a0 BDE8F88F 		pop	{r3, r4, r5, r6, r7, r8, r9, r10, fp, pc}
 164              	.LVL26:
 165              	.L11:
 166              		.align	2
 167              	.L10:
 168 00a4 00000000 		.word	.LC0
 169              		.cfi_endproc
 170              	.LFE0:
 172              		.section	.text.u8x8_UserInterfaceMessage,"ax",%progbits
 173              		.align	2
 174              		.global	u8x8_UserInterfaceMessage
 175              		.thumb
 176              		.thumb_func
 178              	u8x8_UserInterfaceMessage:
 179              	.LFB1:
  80:u8g2_lib/u8x8_message.c **** 
  81:u8g2_lib/u8x8_message.c **** /*
  82:u8g2_lib/u8x8_message.c ****   title1:	Multiple lines,separated by '\n'
  83:u8g2_lib/u8x8_message.c ****   title2:	A single line/string which is terminated by '\0' or '\n' . "title2" accepts the return va
  84:u8g2_lib/u8x8_message.c ****   title3:	Multiple lines,separated by '\n'
  85:u8g2_lib/u8x8_message.c ****   buttons:	one more more buttons separated by '\n' and terminated with '\0'
  86:u8g2_lib/u8x8_message.c **** */
  87:u8g2_lib/u8x8_message.c **** 
  88:u8g2_lib/u8x8_message.c **** uint8_t u8x8_UserInterfaceMessage(u8x8_t *u8x8, const char *title1, const char *title2, const char 
  89:u8g2_lib/u8x8_message.c **** {
 180              		.loc 1 89 0
 181              		.cfi_startproc
 182              		@ args = 4, pretend = 0, frame = 0
 183              		@ frame_needed = 0, uses_anonymous_args = 0
 184              	.LVL27:
 185 0000 2DE9F043 		push	{r4, r5, r6, r7, r8, r9, lr}
 186              	.LCFI1:
 187              		.cfi_def_cfa_offset 28
 188              		.cfi_offset 4, -28
 189              		.cfi_offset 5, -24
 190              		.cfi_offset 6, -20
 191              		.cfi_offset 7, -16
 192              		.cfi_offset 8, -12
 193              		.cfi_offset 9, -8
 194              		.cfi_offset 14, -4
ARM GAS  C:\Users\master\AppData\Local\Temp\ccP233NP.s 			page 6


 195 0004 83B0     		sub	sp, sp, #12
 196              	.LCFI2:
 197              		.cfi_def_cfa_offset 40
 198 0006 0546     		mov	r5, r0
 199 0008 0E46     		mov	r6, r1
 200 000a 9046     		mov	r8, r2
 201 000c 9946     		mov	r9, r3
 202 000e 0A9F     		ldr	r7, [sp, #40]
 203              	.LVL28:
  90:u8g2_lib/u8x8_message.c ****   uint8_t height;
  91:u8g2_lib/u8x8_message.c ****   uint8_t y;
  92:u8g2_lib/u8x8_message.c ****   uint8_t cursor = 0;
  93:u8g2_lib/u8x8_message.c ****   uint8_t button_cnt;
  94:u8g2_lib/u8x8_message.c ****   uint8_t event;
  95:u8g2_lib/u8x8_message.c **** 
  96:u8g2_lib/u8x8_message.c ****   u8x8_SetInverseFont(u8x8, 0);
 204              		.loc 1 96 0
 205 0010 0023     		movs	r3, #0
 206              	.LVL29:
 207 0012 80F82330 		strb	r3, [r0, #35]
 208              	.LVL30:
  97:u8g2_lib/u8x8_message.c ****   
  98:u8g2_lib/u8x8_message.c ****   /* calculate overall height of the message box */
  99:u8g2_lib/u8x8_message.c ****   height = 1;	/* button line */
 100:u8g2_lib/u8x8_message.c ****   height += u8x8_GetStringLineCnt(title1);
 209              		.loc 1 100 0
 210 0016 0846     		mov	r0, r1
 211              	.LVL31:
 212 0018 FFF7FEFF 		bl	u8x8_GetStringLineCnt
 213              	.LVL32:
 214 001c 441C     		adds	r4, r0, #1
 215 001e E4B2     		uxtb	r4, r4
 216              	.LVL33:
 101:u8g2_lib/u8x8_message.c ****   if ( title2 != NULL )
 217              		.loc 1 101 0
 218 0020 B8F1000F 		cmp	r8, #0
 219 0024 01D0     		beq	.L13
 102:u8g2_lib/u8x8_message.c ****     height ++;
 220              		.loc 1 102 0
 221 0026 0230     		adds	r0, r0, #2
 222 0028 C4B2     		uxtb	r4, r0
 223              	.LVL34:
 224              	.L13:
 103:u8g2_lib/u8x8_message.c ****   height += u8x8_GetStringLineCnt(title3);
 225              		.loc 1 103 0
 226 002a 4846     		mov	r0, r9
 227 002c FFF7FEFF 		bl	u8x8_GetStringLineCnt
 228              	.LVL35:
 229 0030 2044     		add	r0, r0, r4
 230 0032 C0B2     		uxtb	r0, r0
 231              	.LVL36:
 104:u8g2_lib/u8x8_message.c ****   
 105:u8g2_lib/u8x8_message.c ****   /* calculate offset from top */
 106:u8g2_lib/u8x8_message.c ****   y = 0;
 107:u8g2_lib/u8x8_message.c ****   if ( height < u8x8_GetRows(u8x8)  )
 232              		.loc 1 107 0
 233 0034 2B68     		ldr	r3, [r5]
ARM GAS  C:\Users\master\AppData\Local\Temp\ccP233NP.s 			page 7


 234 0036 5C7C     		ldrb	r4, [r3, #17]	@ zero_extendqisi2
 235 0038 A042     		cmp	r0, r4
 236 003a 03D2     		bcs	.L25
 237              	.LVL37:
 108:u8g2_lib/u8x8_message.c ****   {
 109:u8g2_lib/u8x8_message.c ****     y = u8x8_GetRows(u8x8);
 110:u8g2_lib/u8x8_message.c ****     y -= height;
 238              		.loc 1 110 0
 239 003c 241A     		subs	r4, r4, r0
 240              	.LVL38:
 111:u8g2_lib/u8x8_message.c ****     y /= 2;
 241              		.loc 1 111 0
 242 003e C4F34604 		ubfx	r4, r4, #1, #7
 243              	.LVL39:
 244 0042 00E0     		b	.L14
 245              	.LVL40:
 246              	.L25:
 106:u8g2_lib/u8x8_message.c ****   if ( height < u8x8_GetRows(u8x8)  )
 247              		.loc 1 106 0
 248 0044 0024     		movs	r4, #0
 249              	.LVL41:
 250              	.L14:
 112:u8g2_lib/u8x8_message.c ****   }
 113:u8g2_lib/u8x8_message.c **** 
 114:u8g2_lib/u8x8_message.c ****   /* draw message box */
 115:u8g2_lib/u8x8_message.c ****   
 116:u8g2_lib/u8x8_message.c ****   u8x8_ClearDisplay(u8x8);   /* required, because not everything is filled */
 251              		.loc 1 116 0
 252 0046 2846     		mov	r0, r5
 253              	.LVL42:
 254 0048 FFF7FEFF 		bl	u8x8_ClearDisplay
 255              	.LVL43:
 117:u8g2_lib/u8x8_message.c ****   
 118:u8g2_lib/u8x8_message.c ****   y += u8x8_DrawUTF8Lines(u8x8, 0, y, u8x8_GetCols(u8x8), title1);
 256              		.loc 1 118 0
 257 004c 2B68     		ldr	r3, [r5]
 258 004e 1B7C     		ldrb	r3, [r3, #16]	@ zero_extendqisi2
 259 0050 0096     		str	r6, [sp]
 260 0052 2246     		mov	r2, r4
 261 0054 0021     		movs	r1, #0
 262 0056 2846     		mov	r0, r5
 263 0058 FFF7FEFF 		bl	u8x8_DrawUTF8Lines
 264              	.LVL44:
 265 005c 2044     		add	r0, r0, r4
 266 005e C6B2     		uxtb	r6, r0
 267              	.LVL45:
 119:u8g2_lib/u8x8_message.c ****   if ( title2 != NULL )
 268              		.loc 1 119 0
 269 0060 B8F1000F 		cmp	r8, #0
 270 0064 0AD0     		beq	.L15
 120:u8g2_lib/u8x8_message.c ****   {
 121:u8g2_lib/u8x8_message.c ****     u8x8_DrawUTF8Line(u8x8, 0, y, u8x8_GetCols(u8x8), title2);
 271              		.loc 1 121 0
 272 0066 2B68     		ldr	r3, [r5]
 273 0068 1B7C     		ldrb	r3, [r3, #16]	@ zero_extendqisi2
 274 006a CDF80080 		str	r8, [sp]
 275 006e 3246     		mov	r2, r6
ARM GAS  C:\Users\master\AppData\Local\Temp\ccP233NP.s 			page 8


 276 0070 0021     		movs	r1, #0
 277 0072 2846     		mov	r0, r5
 278 0074 FFF7FEFF 		bl	u8x8_DrawUTF8Line
 279              	.LVL46:
 122:u8g2_lib/u8x8_message.c ****     y++;
 280              		.loc 1 122 0
 281 0078 0136     		adds	r6, r6, #1
 282              	.LVL47:
 283 007a F6B2     		uxtb	r6, r6
 284              	.LVL48:
 285              	.L15:
 123:u8g2_lib/u8x8_message.c ****   }
 124:u8g2_lib/u8x8_message.c ****   y += u8x8_DrawUTF8Lines(u8x8, 0, y, u8x8_GetCols(u8x8), title3);
 286              		.loc 1 124 0
 287 007c 2B68     		ldr	r3, [r5]
 288 007e 1B7C     		ldrb	r3, [r3, #16]	@ zero_extendqisi2
 289 0080 CDF80090 		str	r9, [sp]
 290 0084 3246     		mov	r2, r6
 291 0086 0021     		movs	r1, #0
 292 0088 2846     		mov	r0, r5
 293 008a FFF7FEFF 		bl	u8x8_DrawUTF8Lines
 294              	.LVL49:
 295 008e 3044     		add	r0, r0, r6
 296 0090 C6B2     		uxtb	r6, r0
 297              	.LVL50:
 125:u8g2_lib/u8x8_message.c **** 
 126:u8g2_lib/u8x8_message.c ****   button_cnt = u8x8_draw_button_line(u8x8, y, u8x8_GetCols(u8x8), cursor, buttons);
 298              		.loc 1 126 0
 299 0092 2B68     		ldr	r3, [r5]
 300 0094 1A7C     		ldrb	r2, [r3, #16]	@ zero_extendqisi2
 301 0096 0097     		str	r7, [sp]
 302 0098 0023     		movs	r3, #0
 303 009a 3146     		mov	r1, r6
 304 009c 2846     		mov	r0, r5
 305 009e FFF7FEFF 		bl	u8x8_draw_button_line
 306              	.LVL51:
 307 00a2 8046     		mov	r8, r0
 308              	.LVL52:
  92:u8g2_lib/u8x8_message.c ****   uint8_t button_cnt;
 309              		.loc 1 92 0
 310 00a4 0024     		movs	r4, #0
 311              	.LVL53:
 312              	.L16:
 127:u8g2_lib/u8x8_message.c ****   
 128:u8g2_lib/u8x8_message.c ****   for(;;)
 129:u8g2_lib/u8x8_message.c ****   {
 130:u8g2_lib/u8x8_message.c ****     event = u8x8_GetMenuEvent(u8x8);
 313              		.loc 1 130 0
 314 00a6 2846     		mov	r0, r5
 315 00a8 FFF7FEFF 		bl	u8x8_GetMenuEvent
 316              	.LVL54:
 131:u8g2_lib/u8x8_message.c ****     if ( event == U8X8_MSG_GPIO_MENU_SELECT )
 317              		.loc 1 131 0
 318 00ac 5028     		cmp	r0, #80
 319 00ae 02D1     		bne	.L17
 132:u8g2_lib/u8x8_message.c ****       return cursor+1;
 320              		.loc 1 132 0
ARM GAS  C:\Users\master\AppData\Local\Temp\ccP233NP.s 			page 9


 321 00b0 601C     		adds	r0, r4, #1
 322              	.LVL55:
 323 00b2 C0B2     		uxtb	r0, r0
 324 00b4 25E0     		b	.L18
 325              	.LVL56:
 326              	.L17:
 133:u8g2_lib/u8x8_message.c ****     else if ( event == U8X8_MSG_GPIO_MENU_HOME )
 327              		.loc 1 133 0
 328 00b6 5328     		cmp	r0, #83
 329 00b8 22D0     		beq	.L26
 134:u8g2_lib/u8x8_message.c ****       break;
 135:u8g2_lib/u8x8_message.c ****     else if ( event == U8X8_MSG_GPIO_MENU_NEXT || event == U8X8_MSG_GPIO_MENU_UP )
 330              		.loc 1 135 0
 331 00ba 5128     		cmp	r0, #81
 332 00bc 01D0     		beq	.L19
 333              		.loc 1 135 0 is_stmt 0 discriminator 1
 334 00be 5428     		cmp	r0, #84
 335 00c0 0DD1     		bne	.L20
 336              	.L19:
 136:u8g2_lib/u8x8_message.c ****     {
 137:u8g2_lib/u8x8_message.c ****       cursor++;
 337              		.loc 1 137 0 is_stmt 1
 338 00c2 0134     		adds	r4, r4, #1
 339              	.LVL57:
 340 00c4 E4B2     		uxtb	r4, r4
 341              	.LVL58:
 138:u8g2_lib/u8x8_message.c ****       if ( cursor >= button_cnt )
 342              		.loc 1 138 0
 343 00c6 A045     		cmp	r8, r4
 344 00c8 00D8     		bhi	.L21
 139:u8g2_lib/u8x8_message.c **** 	cursor = 0;
 345              		.loc 1 139 0
 346 00ca 0024     		movs	r4, #0
 347              	.LVL59:
 348              	.L21:
 140:u8g2_lib/u8x8_message.c ****       u8x8_draw_button_line(u8x8, y, u8x8_GetCols(u8x8), cursor, buttons);
 349              		.loc 1 140 0
 350 00cc 2B68     		ldr	r3, [r5]
 351 00ce 1A7C     		ldrb	r2, [r3, #16]	@ zero_extendqisi2
 352 00d0 0097     		str	r7, [sp]
 353 00d2 2346     		mov	r3, r4
 354 00d4 3146     		mov	r1, r6
 355 00d6 2846     		mov	r0, r5
 356              	.LVL60:
 357 00d8 FFF7FEFF 		bl	u8x8_draw_button_line
 358              	.LVL61:
 359 00dc E3E7     		b	.L16
 360              	.LVL62:
 361              	.L20:
 141:u8g2_lib/u8x8_message.c ****     }
 142:u8g2_lib/u8x8_message.c ****     else if ( event == U8X8_MSG_GPIO_MENU_PREV || event == U8X8_MSG_GPIO_MENU_DOWN  )
 362              		.loc 1 142 0
 363 00de 5228     		cmp	r0, #82
 364 00e0 01D0     		beq	.L23
 365              		.loc 1 142 0 is_stmt 0 discriminator 1
 366 00e2 5528     		cmp	r0, #85
 367 00e4 DFD1     		bne	.L16
ARM GAS  C:\Users\master\AppData\Local\Temp\ccP233NP.s 			page 10


 368              	.L23:
 143:u8g2_lib/u8x8_message.c ****     {
 144:u8g2_lib/u8x8_message.c ****       if ( cursor == 0 )
 369              		.loc 1 144 0 is_stmt 1
 370 00e6 04B9     		cbnz	r4, .L24
 145:u8g2_lib/u8x8_message.c **** 	cursor = button_cnt;
 371              		.loc 1 145 0
 372 00e8 4446     		mov	r4, r8
 373              	.LVL63:
 374              	.L24:
 146:u8g2_lib/u8x8_message.c ****       cursor--;
 375              		.loc 1 146 0
 376 00ea 013C     		subs	r4, r4, #1
 377              	.LVL64:
 378 00ec E4B2     		uxtb	r4, r4
 379              	.LVL65:
 147:u8g2_lib/u8x8_message.c ****       u8x8_draw_button_line(u8x8, y, u8x8_GetCols(u8x8), cursor, buttons);
 380              		.loc 1 147 0
 381 00ee 2B68     		ldr	r3, [r5]
 382 00f0 1A7C     		ldrb	r2, [r3, #16]	@ zero_extendqisi2
 383 00f2 0097     		str	r7, [sp]
 384 00f4 2346     		mov	r3, r4
 385 00f6 3146     		mov	r1, r6
 386 00f8 2846     		mov	r0, r5
 387              	.LVL66:
 388 00fa FFF7FEFF 		bl	u8x8_draw_button_line
 389              	.LVL67:
 390 00fe D2E7     		b	.L16
 391              	.LVL68:
 392              	.L26:
 148:u8g2_lib/u8x8_message.c ****     }    
 149:u8g2_lib/u8x8_message.c ****   }  
 150:u8g2_lib/u8x8_message.c ****   return 0;
 393              		.loc 1 150 0
 394 0100 0020     		movs	r0, #0
 395              	.LVL69:
 396              	.L18:
 151:u8g2_lib/u8x8_message.c **** }
 397              		.loc 1 151 0
 398 0102 03B0     		add	sp, sp, #12
 399              	.LCFI3:
 400              		.cfi_def_cfa_offset 28
 401              		@ sp needed
 402 0104 BDE8F083 		pop	{r4, r5, r6, r7, r8, r9, pc}
 403              		.cfi_endproc
 404              	.LFE1:
 406              		.section	.rodata.str1.4,"aMS",%progbits,1
 407              		.align	2
 408              	.LC0:
 409 0000 2000     		.ascii	" \000"
 410              		.text
 411              	.Letext0:
 412              		.file 2 "c:\\program files (x86)\\gnu tools arm embedded\\5.4 2016q3\\arm-none-eabi\\include\\mach
 413              		.file 3 "c:\\program files (x86)\\gnu tools arm embedded\\5.4 2016q3\\arm-none-eabi\\include\\sys\
 414              		.file 4 "u8g2_lib/u8x8.h"
ARM GAS  C:\Users\master\AppData\Local\Temp\ccP233NP.s 			page 11


DEFINED SYMBOLS
                            *ABS*:00000000 u8x8_message.c
C:\Users\master\AppData\Local\Temp\ccP233NP.s:20     .text.u8x8_draw_button_line:00000000 $t
C:\Users\master\AppData\Local\Temp\ccP233NP.s:25     .text.u8x8_draw_button_line:00000000 u8x8_draw_button_line
C:\Users\master\AppData\Local\Temp\ccP233NP.s:168    .text.u8x8_draw_button_line:000000a4 $d
C:\Users\master\AppData\Local\Temp\ccP233NP.s:173    .text.u8x8_UserInterfaceMessage:00000000 $t
C:\Users\master\AppData\Local\Temp\ccP233NP.s:178    .text.u8x8_UserInterfaceMessage:00000000 u8x8_UserInterfaceMessage
C:\Users\master\AppData\Local\Temp\ccP233NP.s:407    .rodata.str1.4:00000000 $d
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
u8x8_GetStringLineCnt
u8x8_GetStringLineStart
u8x8_GetUTF8Len
u8x8_DrawUTF8
u8x8_ClearDisplay
u8x8_DrawUTF8Lines
u8x8_DrawUTF8Line
u8x8_GetMenuEvent
